(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     83241,       1792]
NotebookOptionsPosition[     82478,       1763]
NotebookOutlinePosition[     82820,       1778]
CellTagsIndexPosition[     82777,       1775]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "work", " ", "is", " ", "licensed", " ", "under", " ", "the",
      " ", "Creative", " ", "Commons", " ", "4.0", " ", 
     RowBox[{"License", ".", "\[IndentingNewLine]", "To"}], " ", "view", " ", 
     "a", " ", "copy", " ", "of", " ", "the", " ", "license"}], ",", 
    RowBox[{
     RowBox[{"visit", " ", 
      RowBox[{"http", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"creativecommons", ".", "org"}], "/", "licenses"}], "/", 
         "by"}], "/", "4.0"}], "/", "\[IndentingNewLine]", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztnQlYVWX+x2vK3DfABREhcV/DFbdEFBE1TVwIFQ0cxQVcQERwQUVcQcVd
cENAcU0by2mdzHGmrHRynllKLXV8qmeytCnT1vfP9/SnLnDPOe/Z7nsv9/d7
ns/MU3Hve+57fud8z3nf3/J47JyIab976KGHkqqV/E9ETMqAxMSY1NH1Sv5h
7OykGXGzp/4+fPb8qXFTE4NiHyn5l9klbHn4oYceLfl/xlgZSiy8hG0lXCjh
Af6EIAiCcHvul/D2Q7/oQ3h57bDREI8SipzgeAmCIAjnB3rhYUdHbjjBsREE
QRCuA3TDw0ZLim3/e+3atdnAwQPZs1Nj2NQZUwmCIAg3B3oQEhrCatas+WM5
PSn+fx15yvbft2nXhuXm57Ejzx8lCIIgiDJAH6AT5fQEOrK99J9L9Ibt3LdL
+LESBEEQzgt0okaNGj/ZaAl05ELpP/cPCRZ+jARBEITzA72w0ZIycb9YDxN9
fARBEITzA72w0ZIy+SPYXxF9fARBEITzA72Qi+8iLSEIgiB4IC0hCIIgjEJa
QhDuxYEjBWxL7la2cl0mS05LZtNmxbHICZFsyLAhLGxoGBsbNU669pNS57MV
azJYzs7NbH9xvvDjJpwb0hKCqNxs272dTZn+exbYNZBVq1ZNd05zlSpVpDyC
8ZMmsKwt2cJ/F+FckJYcZcUnD7O8A7vZ+s1ZbEnGEpaQOJtNip3MRkaMlOLc
evfrzcKHh7NnJkaxuPjpbMHiFJaZtUq6RguOFgo/foKw5fCpIyxj3Uo2aswo
1syvmWX1MrwaeLHQ8MEsZclCug4It9ISaMbqDWtYdEw069qjm3Sd1a1blz38
8MOGrik86zVq3Ii1btNa0pzElCSWV7Bb+O8l3IuCI4XSWlXtOrUt0w/Zd5bH
qkjPXXi+Ej0PhBgqu5Ygvz9magwL7NaFVa9R3aHXl4+vDxtc8ty2eMUSScdE
zwVROTn0XLF0rdarX8/hGlJBU6pUYcNGDmd7CvcKnxfCsVRGLcE+4YzZM1nH
zp3Y7373O+HXF8D7T9iwISxjbYa0BiF6jojKAd6BvX28hft3efDcFjnhGeld
SfQcEY6hMmkJ4k1QzxjPRqKvJSUaNmrIYuOm0BozoZvM9ZmsZauWwn1ZDbwr
TZ05Tfh8EdZTGbRk7aZ1rFefXob3PRwN1rXHjY9ke4v2CZ9DwnVA/Mcjjzyi
2+/wWW9vbxYYGMjCw8NZTEwMS01NZTk5OWz79u0sPT2dxcXFsZEjR7KgoCDm
7+9vKP4LIH6l8FiR8LkjrMOVtQQx8thDF60JRqlarSobGzWWFR07KHxOCecF
a6PYi9DjYx4eHmzChAmsuLiY3b17l2m177//nr3++uts3rx5rGVLfe9DAS0C
qO54JcYVtaTo+EHpeR6xI6J1wEwQC7Zwaarw+SWcj/ziA1L8iBZ/wrtHcnIy
e/PNN9mPP/6oWT+U7IMPPmDZ2dmsR48emo6pfv36bFXWauHzSZiPq2nJouWL
WWPvxsLv+1bSreRdi2IriVK25m1jvs18uf2nTp06bOXKlezevXum6oecnTx5
krVt25b7+PAMODtpjvB5JczFVbQE7/eo7eCoPRGM4+npydq3b8969erFWrRo
IfUGc5Se1KhRQ4rRET3vhFiQE8ubL4KYk4SEBPbf//7XIRpia3jvycvLYz4+
Ptw+PjpyjPD5JczDFbQEe3bYuzP7fg2twBryihUrWG5uLnv++efZhQsX2M2b
N6X1YXv29ddfsytXrrBz586xI0eOsM2bN7O0tDQWGhrKHnvsMdOPEXHEWNMT
fQ4Ix4N30zp163D5yfDhw9nVq1cdrCAV7dtvv2WZmZncsZRT4qYIn2fCHJxd
S3bl57KAli1Muzd37NhRilk5f/48++mnn0y9jqAzJ06cYLGxsaxxY/PW4Zq3
aC7FGYg+F4TjQP1FP38/Lv/As8zPP/9sqi8btT/96U/Sfr/asSOmDHWLRM83
YRxn1pK1G9cyD091f1QC7wqIe9y2bRu7ceOGw64lXNvvvPOOFF/ZtWtXw3pS
q3YtKadAtL8Q1oP13O5B6nva8O38/HzDvnrt2jW2aNEiFhYWxvr168cSExPZ
W2+9Zfh78f7eunVr1d+BteOcHZuFzzthDGfVkqSFSaxq1aq6773Y75g4cSK7
fv264WvCDDt79qy072JETzAfacsWCfcZwloixkWo+oKXl5cUn2XUsLZrbx8Q
9SIQA2b03f3OnTts0KBBqr8Hufv7Du4XPveEfpxRS1B7wcgeO/YuLl68aPg6
s8Kee+45TTEv5cGaAOoYi/YbwhrmJM9V9QHkd5ixN/Lyyy+rXmcbNmwwPM4P
P/zApk2bpvq7UPMItcVEnwNCH86kJXi3f3LAk7rvs507d2YvvfSSYd+32hDz
snv3bta0aVPd71y0Z1n5wJquWvwG9iCwdmTUsAbr66seZ1y9enVT4sIw3qhR
o1THG/rUUOHngdCHM2nJ6MjRuu6tuCcfOHDA9L10q+3+/fts3bp1Uj6AHj2h
GP3KRcvWrRTP+aOPPirlnpthyDXk9bVTp06ZMibyXVC3Rc2vN2zbKPxcENpx
Fi2ZmzxPl4707t1bSDy9mfavf/2LBQQEaP7tWO9CPXvRPkQYZ35qsur53rlz
p2k+d/z4cW4/Q4yvWXbr1i0pH19pPOTqij4fhHacQUt43u3tERUVxR48eGCa
n4u0L774ggUHB2ueA9TcQ38v0X5E6Ae9bZr4NFE8z8hBNNMuXbrE7WOHDh0y
dWzEN2LtTGlM9IUUfV4IbYjWEvTG9fTy1HwPRaxtZTPkR/LsUZYH+WxUc8V1
mTYrTvH8Ig7K7Hpa2A+vXVs9nx5rTh9//LGpY8OKiooUx0VfedHnhdCGSC1B
PnerNsprxOVBXGxhYaHpvu1MtmnTJs01xdHLgmJgXA/0sEG9Q7nzivxxM/ba
7RnigdX8avbs2ZaMDXvySeU4G/SRF31+CH5EaknwQG1rOoip//Of/2yZbzuT
nTlzRurFqGV+UI9ctD8R2oiKjlI8p/Hx8Zb62YwZMxTfh6ysD/n2228r/vZm
fs2oB6kLIUpLJsVO1nSfbNSokVPUG3Kk/f3vf2f16mnr4b1gcYpwnyL4QJ05
1PCUO5dYg3JEXAnq0CEnq0GDBtKYffv2ZVu3bnVIXZZx48Yp+jP1YHAdRGgJ
6sZr6cOOda2//vWvlvu1MxryZbSsd9WsVZPt2LtTuF8R6uA+qXQuUTfe0ebo
ul54PlSqAxkaPlj4eSL4cLSWoGad1r125I64s23ZskXTfPXs1VO4XxHqhA4J
lT2HTZo0cVj/EdGGPRm5efBq4CX8PBF8OFpLnho1QtN9MSUlRbSrO4VNnz5d
07ylpqcJ9y1CGaW6patXrzbVfy5fvsymTJki9W738/PTDXrAv/baa6Ye27//
/W9FX87eukH4uSLUcaSWwCe0rNeMGDHC5XLZrTLEcIaEhHDPHfr9Uv945wU5
VUrnD/dXswzxxFp6VKmBa/g///mPaccHQ685ufEmPhst/HwR6jhSS9q2b8ft
r+gzgn4gZL/Zl19+KdX1453DsVFjhfsXYR/0CJU7b6jTbqa9+OKLpulIKatW
rTL1GOfMmSM7VrsO7YSfL0IdR2kJT42IUhBPYkV+VGUwPK/yxnZVrVaV7Sna
K9zHiIoEtJCvmWP2uu6+fftM1xLc+820V155RfE9aH9xvvBzRijjKC1RunbK
g7rsZPKWk5ND7yYuzO6CPYq13v/yl7+Y6i+uoCXfffedYh4+5S06P47QEtQf
5PVR9HUjUzZcd9hD5ZlP9GNE7JxoPyN+Y3X2atnzhTwqs/cIXUFLYKNHy9cJ
F93jlVDHEVrSvmN7bh81ozeoOxjipHnnFHmhov2M+I2UxSmy52rYsGGm+4qr
aMnSpUtlx6P3a+fHai1Bj3Je/xw7dqzp/llZDc+uiE/gmVfEnqIWrWhfI34h
TqGWI+J2zTZX0RLk2suNRzmLzo/VWhISyhfHitxXd6uRYtROnz7Nfe0vyVgq
3NeIX4icECl7nhYvXmy6n7iKlhw9elR2vO5BPYSfN0IZK7UEdYBr1qzJ5ZtW
1iOtzIb9JZ75haaL9jXiF8KGhsmeJzybm22uoiVnz56VHQ/1xEWfN0IZK7Uk
KXU+l1+iHu7t27dN9013sPPnz3PNMep0HTxxSLi/EUelGjdy5+nYsWOm+4ir
aAn6i8qN17BRQ+HnjVDGSi1RumZsWbZsmel+CfvHP/4h5Wnl5+ezDRs2sLy8
POmf33//ffb5559bMibs008/Za+++iorLi6WnjM3b94s3SNQn/LGjRtSzysz
rU+fPlzznEI1hJ2C1m1ay54jPBuYba6iJcjFlRsP9V1FnzdCGau0BHGoSvU/
bfnnP/9pmj+eO3eOxcXFMV9fX9VxUT8PeWF4HjJq169fZ0uWLGFdunRRzB0A
6Ec8ZswYab/DjH55a9as4ZrnAYMGCPc34ijze9xf9hz97W9/M+wP5c1VtASx
7nLj4ZqiXibOjVVasmjZIi6fRB0eMwz9q8PDw3VfGz179pTeJbQa+kvgusJz
k55xvb29WWZmpiFNQZ8TnrFQo0u0vxFHWacnOsmeo5dfflm3H8iZq2jJrVu3
ZMdDHqPo80YoY5WWPD3maS6fTExMNOyD69at09QPRQ58x/Lly7lzxd58802p
16MZ1+aAAQPYZ599pnsOUMOVZ5xd+bnCfc7d6Rcs35vWiv4KrqIlFy9elB3P
x9dH+HkjlLFKS3j7uL/xxhu6fe/Bgwds0qRJpl8ngwcPZl988YXi2Lg+sVZl
5riNGzeW9EmPzZw5k2uMeQvmCfc5d0ep78LatWt1nX8lcxUtQV9qufGQ7yz6
vBHKWKElBUcKuWrLe3h4GFrbGT9+vOnXSClDhgyR7TGnFAdvFMS06alr+cIL
L3B9f9iwIcJ9zt2JjpV//pk3b57u60HOXEVLECMjN16vvr2FnzdCGSu0ZPnq
5Vz+GB0drdvv8Pxm1f28lOzs7ArjYm+CN2dGL7169ZL6lWix+/fvs+rVq6t+
N2KIRPucu5OQKN9HMCoqSvc1IWeuoiXr16+XHS98eLjw80YoY4WWzE6S70Vg
C57v9diFCxe490cQ/9G8eXM2atQolp6ezhYuXCj1hnv00UdVP4s1rHfffffX
cfEO1aZNG+7rDbXzBw0aJO0JYR8G63H169fn+mxaWprmeRk+fLjq99L+u3hQ
g0Du/PTu3VvXNaFkb7/9tnTvt0Xr+mxMTEyZz584ccL048R1Ijd+5IRnhJ83
QhkrtGTylMlc/nnnzh1dPvfUU09xfX/Dhg2lXFp7du3aNek+r/T54OBg9s47
7/z6maKiIq5xEQstl7+M36y2t4F45l27dmmeF/QnUju2atWqCfc5dwf9ReXO
D55x9F4XWgxrqVq0xBH9hLp37y47/rRZccLPG6GMFVoyMmKkqm9inUiPIf6e
x/c7deqk2kcU60LYZy//WawxlY8Pxt5J+/bq9Y49PT258s0WLFhQ4bNNmzZl
27dvl+Ls9djevXu55qbgaKFwv3NnUH9AaT0SzyxWm7NpCWIYlfKyMtZmCD9v
hDJWaEn/kP6qvqk3ryQ+Pp7L99GnjceQ/1667tS1a1dpD9ue8dYqQa4IjyHu
uFu3br9qyLZt23RrSKnx7r9v271duN+5O0F9gmTPT2RkpCE/4DFn0xKl5yD0
4KE6186PFVrSObCzqm/27dtXl8/x7Fd06NBB03cePnxYdf135cqVquPWqFFD
NZbY1tCrBWthiG02w7C3w6V3WauE+527M2uu/DNRnTp1TK+zU96cTUuU+mD1
ebKv8PNFqGOFlvj5q+fN6elVopQXawvWicy2kBD12vnTpk0zfVwthjU9nvlZ
QHW5hLOnaK9i/IgV+e+25kxaAt1U6s+bkJgg/HwR6lihJTx+mpCQoNnnjh8/
zuX3ZvfLhin5eik7duwwfVwtplTPyJa4+OnC/Y44ytq0k3/HRsyfleZMWoJ6
q3LjYg9lT+Fe4eeKUMdsLcG6plptQ4CYI62GezWP36MWr5nGe4+W22txpPHE
HD8zMUq43xFH2cRno2XPEd5ZkMtklTmTlvTo0UN23JatqW+Jq2C2luTm53H5
JvbatNqKFStUvxfXoNlrzaghz/ObLl++bOq4eoxnP4nyvpyDjds3KZ6noUOH
WuYnzqIlajUkKK/EdTBbS9bnyOeu2oL3Wq2GHCm170VOidmGmvg8vwn9F0Rb
//7qMXS9+1E9CmdBaZ0LvP7665b4iTNoCWo7tGzZUvG5MGfHZuHniODDbC3Z
tCOHyzdPnjyp2feSk5NVv7dWrVqm+zz60PP8pps3b5o+tlZDbozacfYPCRbu
d8QvZK7PVDxXiFOXqwtnxJxBSxAjozTmgEHUV9qVMFtL9hfL12ezZefOnZp9
j7cG1927d031ecT58oxrRU88rRYQEKB6nKhTK9rviN/o2Vs+1wQUFBSY7iei
teTrr79mjRo1kh2vymNV2I69O4WfG4IfK+K44Adqvon6VFptz549XH6P3rxm
GvIKeeIJDh06ZOq4eown3gx7vqL9jviNnJ2bFetq45yavQ8vUktwPaE+nuLz
ztNPCT8vhDas0JIGDRuo+uaMGTM0++Af//hHLr/H35lt6C2iNq4VvSe02Lff
fss1P7PmzhLud0RZwoaGKZ4zf39/qYenWSZSS9TWqpHzi/wb0eeE0IYVWtKy
lfx+Wil4LtFqWLviqQ+sJ2cQOSlK/RSRW6k2LmrTaTX0krt3757mz9kz9Jzn
uS+kpqcJ9zuiLHkFu6W6m0rnrU+fPobr7JSaKC3Jzc1VHYti1l0TK7Ske0/5
ep+lYI9YjwUGBqp+N+rmaall8v7770trDKjdeOrUKbt/o7ZPWIqWvojffPON
9L6DdeOcnBzDtVRQi5/nGNdsWCvc74iK4B6qdu7MymEUoSWokafW6wH5Ueil
J/pcENqxQktCh4Sq+iZ6iuix+fPnc/k+clF4DM95qA1WXufK16q/cuUK17jD
hg3j/i3l3/VRaz4vL09zH6xSO336NNcx0p6mc3L41BEW2K2L6vnLyMjQ5R+2
5mgtee+991THRK8GqgfsulihJWOj1NeDsCaqx+DTPH2ssFeO/X2leErsL4SF
ya9Th4eHSzXuSw3/zHPdoU4d4lSUTCnvEjWUCwsLNceC8tacLzp+ULjfEfbJ
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
EITrAh0ZX8ItJzgWgiAIwvWAfoz/P/wMss0=
          "], {{0, 141}, {403, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{403, 141},
        PlotRange->{{0, 403}, {0, 141}}]}], "\[IndentingNewLine]", "Benjamin",
       " ", "Sch\[ADoubleDot]fer"}]}], ",", " ", 
    RowBox[{
     RowBox[{"benjamin", ".", 
      RowBox[{"schaefer", "@", "ds"}], ".", "mpg", ".", "de"}], "\n", 
     "Network", " ", "Dynamics"}], ",", " ", 
    RowBox[{
     RowBox[{
     "Max", " ", "Planck", " ", "Institute", " ", "for", " ", "Dynamics", " ",
       "and", " ", "Self"}], "-", "Organization"}]}], "*)"}], 
  "Text"]], "Input",
 CellChangeTimes->{{3.623663709433198*^9, 3.623663781061768*^9}, {
   3.623663978119752*^9, 3.623663996573287*^9}, {3.623664032062727*^9, 
   3.623664085311968*^9}, {3.623664120890615*^9, 3.623664121665863*^9}, 
   3.6236641823149157`*^9, 3.6857854493581033`*^9, {3.693725067509337*^9, 
   3.6937250708079824`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "Build", " ", "the", " ", "characteristic", " ", "equation", " ", "as", 
     " ", "you", " ", "did"}], "*)"}], "Subsubsection"], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Tau]", ",", "funOmega", ",", "funTheta", ",", "\[CapitalTheta]", ",", 
      "\[CapitalOmega]", ",", "\[Theta]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", "0.1"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coupling", "=", "8"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"power", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfNodes", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjacency", "=", 
     RowBox[{"AdjacencyMatrix", "[", 
      RowBox[{"StarGraph", "[", "numberOfNodes", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Build", " ", "Jacobian"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"funOmega", "[", 
      RowBox[{"\[Theta]_", ",", "\[Omega]_", ",", "i_List"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"power", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "-", 
      RowBox[{"\[Alpha]", "*", 
       RowBox[{"\[Omega]", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"adjacency", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", "coupling", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"funTheta", "[", 
      RowBox[{"\[Theta]_", ",", "\[Omega]_", ",", "i_List"}], "]"}], ":=", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalTheta]", "=", 
     RowBox[{"Array", "[", 
      RowBox[{"\[Theta]", ",", "numberOfNodes"}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"http", ":"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"reference", ".", "wolfram", ".", "com"}], "/", "language"}], 
       "/", "tutorial"}], "/", 
      RowBox[{"MakingDefinitionsForIndexedObjects", ".", "html"}]}]}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{"Array", "[", 
      RowBox[{"\[Omega]", ",", "numberOfNodes"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"funTheta", "[", 
         RowBox[{"\[CapitalTheta]", ",", "\[CapitalOmega]", ",", "i"}], "]"}],
         "/.", 
        RowBox[{"i", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"{", "\[CapitalTheta]", "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"funTheta", "[", 
         RowBox[{"\[CapitalTheta]", ",", "\[CapitalOmega]", ",", "i"}], "]"}],
         "/.", 
        RowBox[{"i", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"{", "\[CapitalOmega]", "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"funOmega", "[", 
         RowBox[{"\[CapitalTheta]", ",", "\[CapitalOmega]", ",", "i"}], "]"}],
         "/.", 
        RowBox[{"i", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"{", "\[CapitalTheta]", "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"funOmega", "[", 
         RowBox[{"\[CapitalTheta]", ",", "\[CapitalOmega]", ",", "i"}], "]"}],
         "/.", 
        RowBox[{"i", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"{", "\[CapitalOmega]", "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jac", "=", 
     RowBox[{"ArrayFlatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "d"}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jacD", "=", 
     RowBox[{"ArrayFlatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"numberOfNodes", ",", "numberOfNodes"}], "}"}]}], "]"}], 
          ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[Lambda]"}], "*", "\[Tau]"}], "]"}], "*", 
           "\[Gamma]"}]}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"charEqMatrix", "=", 
     RowBox[{"jac", "+", "jacD", "-", 
      RowBox[{"\[Lambda]", "*", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"2", "*", "numberOfNodes"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "fixed", " ", "point"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invars", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"x", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inconds", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "i", "]"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ineqns", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"power", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", 
        RowBox[{"-", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"adjacency", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", "coupling", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"x", "[", "j", "]"}], "-", 
              RowBox[{"x", "[", "i", "]"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}],
        ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invals", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "i", "]"}], "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"ineqns", ",", "inconds"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "[", "i", "]"}], "=", 
       RowBox[{"invals", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqn", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Det", "[", "charEqMatrix", "]"}], "/", "\[Lambda]"}], "}"}]}],
     " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"divide", " ", "by", " ", 
      RowBox[{"\[Lambda]", ".", " ", "No"}], " ", "idea", " ", "why", " ", 
      "the", " ", "equation", " ", "is", " ", "not", " ", "reduced", " ", 
      "then"}], "..."}], "*)"}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Apply", " ", "Simplify", " ", "to", " ", "get", " ", "the", " ", 
       "reduced", " ", "equation"}], ",", " ", 
      RowBox[{"AND", ":", " ", 
       RowBox[{
        RowBox[{"do", " ", "not", " ", "set"}], " ", "==", "0"}]}], ",", " ", 
      RowBox[{
      "otherwise", " ", "we", " ", "loose", " ", "a", " ", "factor", " ", 
       RowBox[{"Exp", "[", "\[Lambda]\[Tau]", "]"}]}]}], "*)"}], "Text"], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "@", "eqn"}]}]}]], "Input",
 CellChangeTimes->{{3.6936445254213142`*^9, 3.6936445374565144`*^9}, {
  3.6936445756465287`*^9, 3.6936446206802034`*^9}, {3.6936454095165358`*^9, 
  3.693645412084284*^9}, {3.6936454564695187`*^9, 3.6936454889896708`*^9}, {
  3.693718900589335*^9, 3.693718955523486*^9}, {3.693719002281937*^9, 
  3.6937190331156282`*^9}, {3.693719297813757*^9, 3.6937193304527974`*^9}, {
  3.6937193689058695`*^9, 3.6937193729101405`*^9}, {3.693719412541789*^9, 
  3.6937194409148884`*^9}, {3.6937213869329643`*^9, 3.693721395701284*^9}, {
  3.6937214583739414`*^9, 3.6937214770795045`*^9}, {3.693723540013048*^9, 
  3.6937235446093955`*^9}, {3.693723664102676*^9, 3.6937236658677063`*^9}, {
  3.69372371041761*^9, 3.6937237105748568`*^9}, {3.693724221899485*^9, 
  3.6937242655499687`*^9}, {3.693724298371934*^9, 3.6937242985092664`*^9}, {
  3.6937247132228217`*^9, 3.693724729747817*^9}, {3.6937247762032485`*^9, 
  3.6937248269048405`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Lambda]", " ", "\[Tau]"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.0625`", " ", "\[Lambda]"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Lambda]", " ", "\[Tau]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"3.968626966596886`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.05`", " ", "\[Lambda]"}], "+", 
        RowBox[{"0.5`", " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[Lambda]", " ", "\[Tau]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1.5874507866387546`", "\[VeryThinSpace]", "+", 
        RowBox[{"15.884507866387544`", " ", "\[Lambda]"}], "+", 
        RowBox[{"0.2`", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox["\[Lambda]", "3"]}]}], ")"}]}]}], ")"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6937242988886843`*^9, {3.6937247198521214`*^9, 3.6937247301945333`*^9}, 
   3.693724827566989*^9, 3.6938851151695585`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["(*Find the roots by sampling a pre-defined band *)", "Chapter",
 CellChangeTimes->{{3.693716348093341*^9, 3.6937163560427103`*^9}, {
  3.6937165774794717`*^9, 3.6937165975894585`*^9}, {3.6937167022307944`*^9, 
  3.6937167060612264`*^9}}],

Cell["\<\
Some comments regarding timing: On my Laptop this takes ~80 sec with 4 i7 \
cores running, when using maxDelay=10;stepSizeDelay=0.05;\
\>", "Text",
 CellChangeTimes->{{3.6937192059620028`*^9, 3.6937192575383716`*^9}, {
  3.693722775051841*^9, 3.6937227858522434`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Lets", " ", "assume", " ", "we", " ", "have", " ", "the", " ", 
      "characteristic", " ", "equation"}], ",", " ", 
     RowBox[{
      RowBox[{"you", " ", "could", " ", "re"}], "-", 
      RowBox[{
      "write", " ", "the", " ", "above", " ", "to", " ", "return", " ", "the",
        " ", "characteristic", " ", "function", " ", "as", " ", "a", " ", 
       "function", " ", "and", " ", "divide", " ", "it", " ", "by", " ", 
       "\[Lambda]"}]}]}], "*)"}], "Text"], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "eqn", 
     StyleBox["]", "Input"]}], 
    StyleBox[";", "Input"]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eqn", "[", 
      RowBox[{"\[Lambda]_", ",", "\[Tau]_"}], "]"}], ":=", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"1", "/", "\[Lambda]"}], "*"}], "*)"}], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Lambda]", " ", "\[Tau]"}]], " ", 
      "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0.0625`", " ", "\[Lambda]"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Lambda]", " ", "\[Tau]"}]], " ", 
         RowBox[{"(", 
          RowBox[{"3.968626966596886`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.05`", " ", "\[Lambda]"}], "+", 
           RowBox[{"0.5`", " ", 
            SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[Lambda]", " ", "\[Tau]"}]], " ", 
         RowBox[{"(", 
          RowBox[{"1.5874507866387546`", "\[VeryThinSpace]", "+", 
           RowBox[{"15.884507866387544`", " ", "\[Lambda]"}], "+", 
           RowBox[{"0.2`", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"1.`", " ", 
            SuperscriptBox["\[Lambda]", "3"]}]}], ")"}]}]}], ")"}]}]}], ";"}], 
   StyleBox["\[IndentingNewLine]", "Text"], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "Turn", " ", "off", " ", "some", " ", "unneccessary", " ", "messages", 
      " ", 
      RowBox[{"(", 
       RowBox[{
       "be", " ", "careful", " ", "to", " ", "know", " ", "what", " ", "you", 
        " ", "do"}], ")"}]}], "*)"}], "Text"], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Off", "[", 
     RowBox[{"InterpolatingFunction", "::", "dmval"}], "]"}], ";", 
    RowBox[{"ParallelEvaluate", "[", 
     RowBox[{
      RowBox[{"Off", "[", 
       RowBox[{"InterpolatingFunction", "::", "dmval"}], "]"}], ";", 
      RowBox[{"Off", "[", 
       RowBox[{"FindRoot", "::", "lstol"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Off", "[", 
     RowBox[{"FrontEndObject", "::", "notavail"}], "]"}], ";", 
    RowBox[{"ParallelEvaluate", "[", 
     RowBox[{"Off", "[", 
      RowBox[{"FrontEndObject", "::", "notavail"}], "]"}], "]"}], ";", 
    RowBox[{"Off", "[", 
     StyleBox[
      RowBox[{"FindRoot", "::", "precw"}], "MessageName"], 
     StyleBox["]", "MessageName"]}], 
    StyleBox[";", "MessageName"]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "the", " ", "sampling", " ", "delay"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minDelay", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stepSizeDelay", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxDelay", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "How", " ", "deep", " ", "and", " ", "how", " ", "mich", " ", "do", " ", 
      "we", " ", "want", " ", "to", " ", 
      RowBox[{"sample", "?"}]}], "*)"}], "Text"], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cutOff", "=", 
     RowBox[{"-", "100"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfTrysForMinimalDelay", "=", "1000"}], ";"}], 
   "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Generate", " ", "a", " ", "list", " ", "of", " ", "eigenvalues", " ", 
       "for", " ", "delay", " ", "\[Tau]"}], "=", "stepSizeDelay"}], "*)"}], 
    "Text"], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]samplingDelayUnfiltered", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Lambda]", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eqn", "[", 
            RowBox[{"\[Lambda]", ",", 
             RowBox[{"stepSizeDelay", "+", "minDelay"}]}], "]"}], "==", " ", 
           "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", 
            RowBox[{
             RowBox[{"RandomComplex", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cutOff", "-", 
                 RowBox[{"15", "I"}]}], ",", 
                RowBox[{"10", "+", 
                 RowBox[{"15", "I"}]}]}], "}"}], "]"}], "+", 
             RowBox[{"0.01", "I"}]}]}], "}"}], ",", 
          RowBox[{"MaxIterations", "->", "10000"}], ",", 
          RowBox[{"WorkingPrecision", "->", "30"}], ",", 
          RowBox[{"AccuracyGoal", "->", "4"}]}], "]"}]}], ",", 
       RowBox[{"{", "numberOfTrysForMinimalDelay", "}"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"\[Lambda]samplingDelayFiltered", "=", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"\[Lambda]samplingDelayUnfiltered", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"#1", "-", "#2"}], "]"}], "<", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], "&"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"numberOfEigenvalues", "=", 
     RowBox[{"Length", "[", "\[Lambda]samplingDelayFiltered", "]"}]}], ";"}], 
   "\n", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "define", " ", "table", " ", "for", " ", "all", " ", "eigenvalues", " ", 
      "and", " ", "all", " ", "delays"}], "*)"}], "Text"], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]TowardsMaxDelay", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberOfEigenvalues"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]counter", ",", "1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"maxDelay", "-", "stepSizeDelay", "-", "minDelay"}], 
            ")"}], "/", "stepSizeDelay"}], "+", "1"}]}], "}"}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]TowardsMaxDelay", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
     "\[Lambda]samplingDelayFiltered"}], ";"}], 
   StyleBox["\[IndentingNewLine]", "Subsubsection"], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
       "Based", " ", "on", " ", "the", " ", "initial", " ", "eigenvalues", 
        " ", "found", " ", "at", " ", "\[Tau]"}], "=", "stepSizeDelay"}], ",",
       " ", 
      RowBox[{
      "assume", " ", "that", " ", "the", " ", "curves", " ", "are", " ", 
       "smooth", " ", "and", " ", "continue", " ", "along", " ", "the", " ", 
       "so", " ", "far", " ", "determined", " ", "eigenvalues"}]}], "*)"}], 
    "Subsubsection"], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Explicitly", " ", "determine", " ", "the", " ", "eigenvalues", " ", 
      "for", " ", "\[Tau]counter"}], "=", 
     RowBox[{"2", " ", "and", " ", "3"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Do", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Tau]", "=", 
        RowBox[{"stepSizeDelay", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Tau]counter", "-", "1"}], ")"}], "*", 
          "stepSizeDelay"}]}]}], ";", "\n", 
       RowBox[{
        RowBox[{"\[Lambda]TowardsMaxDelay", "[", 
         RowBox[{"[", 
          RowBox[{"index", ",", "\[Tau]counter"}], "]"}], "]"}], "=", 
        RowBox[{"\[Lambda]", "/.", 
         RowBox[{
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eqn", "[", 
              RowBox[{"\[Lambda]", ",", "\[Tau]"}], "]"}], "==", " ", "0"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"\[Lambda]", ",", 
              RowBox[{
               RowBox[{"\[Lambda]TowardsMaxDelay", "[", 
                RowBox[{"[", 
                 RowBox[{"index", ",", 
                  RowBox[{"\[Tau]counter", "-", "1"}]}], "]"}], "]"}], "+", 
               RowBox[{"0.01", "*", "I"}]}]}], "}"}], ",", 
            RowBox[{"PrecisionGoal", "->", "4"}], ",", 
            RowBox[{"AccuracyGoal", "->", "4"}], ",", " ", 
            RowBox[{"MaxIterations", "->", "300"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", ",", 
      RowBox[{"{", 
       RowBox[{"index", ",", "numberOfEigenvalues"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]counter", ",", "2", ",", "3"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Continue", " ", "for", " ", "\[Tau]counter"}], 
      "\[GreaterEqual]", "3"}], ",", " ", 
     RowBox[{
     "to", " ", "use", " ", "extrapolation", " ", "to", " ", "find", " ", 
      "next", " ", "eigenvalue"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"DistributeDefinitions", "[", "eqn", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetSharedVariable", "[", 
     RowBox[{
     "\[Tau]counter", ",", "stepSizeDelay", ",", "\[Lambda]TowardsMaxDelay", 
      ",", "\[Lambda]TowardsZero"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Do", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Lambda]TowardsMaxDelay", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\[Tau]counter"}], "]"}], "]"}], "=", 
       RowBox[{"ParallelTable", "[", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "calculate", " ", "the", " ", "actual", " ", "delay", " ", "for", 
          " ", "the", " ", "iteration"}], "*)"}], "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Tau]", "=", 
           RowBox[{"minDelay", "+", "stepSizeDelay", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Tau]counter", "-", "1"}], ")"}], "*", 
             "stepSizeDelay"}]}]}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "the", " ", "new", " ", "eigenvalue", " ", "is", " ", "found", 
             " ", "by", " ", "using", " ", "the", " ", "previous", " ", 
             "one"}], ";", " ", 
            RowBox[{
            "the", " ", "iteration", " ", "starts", " ", "delayed", " ", "by",
              " ", "three", " ", "as", " ", "they", " ", "were", " ", 
             "calculated", " ", "already"}], ";", "\n", 
            RowBox[{
            "note", " ", "that", " ", "we", " ", "add", " ", "a", " ", 
             "small", " ", "imaginary", " ", "number", " ", "to", " ", "the", 
             " ", "previous", " ", "\[Lambda]", " ", "to", " ", "allow", " ", 
             "real", " ", "eigenvalues", " ", "to", " ", "become", " ", 
             "complex"}]}], "*)"}], "\n", 
          RowBox[{"initialGuess", "=", 
           RowBox[{
            RowBox[{"Interpolation", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"\[Tau]counter", "-", "3", "-", "1"}], ")"}], "*",
                    "stepSizeDelay"}], ",", 
                  RowBox[{"Indexed", "[", 
                   RowBox[{"\[Lambda]TowardsMaxDelay", ",", 
                    RowBox[{"{", 
                    RowBox[{"index", ",", 
                    RowBox[{"\[Tau]counter", "-", "3"}]}], "}"}]}], "]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"\[Tau]counter", "-", "2", "-", "1"}], ")"}], "*",
                    "stepSizeDelay"}], ",", 
                  RowBox[{"Indexed", "[", 
                   RowBox[{"\[Lambda]TowardsMaxDelay", ",", 
                    RowBox[{"{", 
                    RowBox[{"index", ",", 
                    RowBox[{"\[Tau]counter", "-", "2"}]}], "}"}]}], "]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"\[Tau]counter", "-", "1", "-", "1"}], ")"}], "*",
                    "stepSizeDelay"}], ",", 
                  RowBox[{"Indexed", "[", 
                   RowBox[{"\[Lambda]TowardsMaxDelay", ",", 
                    RowBox[{"{", 
                    RowBox[{"index", ",", 
                    RowBox[{"\[Tau]counter", "-", "1"}]}], "}"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"InterpolationOrder", "->", "2"}]}], "]"}], "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Tau]counter", "-", "1"}], ")"}], "*", 
             "stepSizeDelay"}], "]"}]}], ";", "\n", 
          RowBox[{"\[Lambda]", "/.", 
           RowBox[{
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"eqn", "[", 
                RowBox[{"\[Lambda]", ",", "\[Tau]"}], "]"}], "==", " ", "0"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"\[Lambda]", ",", 
                RowBox[{"initialGuess", "+", 
                 RowBox[{"0.01", "*", "I"}]}]}], "}"}], ",", 
              RowBox[{"PrecisionGoal", "->", "4"}], ",", 
              RowBox[{"AccuracyGoal", "->", "4"}], ",", " ", 
              RowBox[{"MaxIterations", "->", "300"}]}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", ",", 
         RowBox[{"{", 
          RowBox[{"index", ",", "numberOfEigenvalues"}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]counter", ",", "4", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"maxDelay", "-", "stepSizeDelay", "-", "minDelay"}], ")"}],
           "/", "stepSizeDelay"}], "+", "1"}]}], "}"}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.693716655983759*^9, 3.6937167412638826`*^9}, {
   3.6937167780917997`*^9, 3.693716915467701*^9}, {3.69371698033403*^9, 
   3.6937170169678774`*^9}, {3.6937170953121347`*^9, 3.693717173813487*^9}, {
   3.6937172212764263`*^9, 3.6937174869924793`*^9}, {3.6937175997789016`*^9, 
   3.693717669518897*^9}, 3.693717746710281*^9, {3.6937178556715355`*^9, 
   3.6937178562866087`*^9}, 3.693717889522051*^9, {3.6937179783822117`*^9, 
   3.6937180083121743`*^9}, {3.6937181497260303`*^9, 
   3.6937181636847124`*^9}, {3.6937181954340367`*^9, 
   3.6937182022363505`*^9}, {3.693718252306817*^9, 3.693718274949218*^9}, {
   3.693719137681615*^9, 3.693719191431782*^9}, {3.6937192491667166`*^9, 
   3.6937192740381603`*^9}, 3.69371959057642*^9, {3.693719676304654*^9, 
   3.693719679228386*^9}, {3.6937197205651236`*^9, 3.6937197207250433`*^9}, 
   3.6937197530000834`*^9, {3.6937198135592957`*^9, 3.6937198141812963`*^9}, {
   3.693719882807757*^9, 3.693719905976327*^9}, {3.693720313483884*^9, 
   3.693720371001687*^9}, {3.693721421729411*^9, 3.6937214219416485`*^9}, 
   3.6937214934357443`*^9, 3.6937215439246297`*^9, 3.693721935009012*^9, {
   3.6937225486385098`*^9, 3.6937225653277884`*^9}, {3.693722696751686*^9, 
   3.693722699813628*^9}, {3.693723713595996*^9, 3.6937237439195976`*^9}, {
   3.693723985278421*^9, 3.69372398548595*^9}, 3.6937248408833485`*^9, {
   3.6938424582897315`*^9, 3.693842474845361*^9}, 3.6938851993474855`*^9, {
   3.6938853557943335`*^9, 3.693885358583779*^9}, {3.6938854933834925`*^9, 
   3.693885541633501*^9}, 3.693885654456023*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Export", " ", "longer", " ", "calculation"}], "*)"}], 
   "Subsubsection"], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<2 node eigenvalues 0.05 to 10.wdx\>\"", ",", 
      "\[Lambda]TowardsMaxDelay"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.693719039110049*^9, 3.693719087101136*^9}, {
   3.6937227150985622`*^9, 3.6937227152635355`*^9}, 3.6937227908717527`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Import", " ", "longer", " ", "calculation"}], "*)"}], 
   "Subsubsection"], 
  StyleBox["\[IndentingNewLine]", "Subsubsection"], 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]TowardsMaxDelay", "=", 
     RowBox[{
     "Import", "[", "\"\<2 node eigenvalues 0.05 to 10.wdx\>\"", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.693719039110049*^9, 3.693719102880828*^9}, 
   3.6937227245551243`*^9, 3.6937227961954927`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "Show", " ", "the", " ", "results", " ", "in", " ", "a", " ", 
             RowBox[{"ListPlot", ":", " ", 
              RowBox[{
              "The", " ", "highest", " ", "curve", "  ", "is", " ", "the", 
               " ", "mode", " ", "we", " ", "typically", " ", "see", " ", 
               "when", " ", "considering", " ", "only", " ", "the", " ", 
               RowBox[{"difference", ".", " ", "The"}], " ", "initially", " ",
                "middle", " ", "curve", " ", "then", " ", "destabilizes", " ",
                "the", " ", "system", " ", "for", " ", "large", " ", 
               "delays"}]}]}], ";", " ", 
            RowBox[{
            "we", " ", "are", " ", "missing", " ", "many", " ", "other", " ", 
             "curves"}]}], ",", " ", 
           RowBox[{
           "that", " ", "all", " ", "start", " ", "at", " ", "very", " ", 
            "negative", " ", "real", " ", "parts", " ", "and", " ", "would", 
            " ", "contribute", " ", "to", " ", "the", " ", 
            RowBox[{"oscillations", ".", " ", "You"}], " ", "can", " ", 
            "find", " ", "those", " ", "if", " ", "you", " ", 
            "\[IndentingNewLine]", "a"}]}], ")"}], " ", "start", " ", "the", 
         " ", "extensive", " ", "random", " ", "sampling", " ", "at", " ", 
         "a", " ", "higher", " ", "delay", "\[IndentingNewLine]", "b"}], 
        ")"}], " ", "when", " ", "you", " ", "increase", " ", "the", " ", 
       "parameter", " ", "\"\<offset\>\"", " ", "to", " ", "VERY", " ", 
       "negative", " ", 
       RowBox[{"numbers", " ", "~", 
        RowBox[{"-", 
         RowBox[{"10", "^", "3"}]}]}]}], "..."}], "-", 
     RowBox[{"10", "^", "10"}]}], "*)"}], "Subsubsection"], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"maxDelay", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stepSizeDelay", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"markersize", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colorValue", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DiscretePlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Re", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "\[Lambda]TowardsMaxDelay", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"\[Tau]", "/", 
            RowBox[{"(", "stepSizeDelay", ")"}]}], ",", "1"}], "]"}], "]"}], 
        "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "take", " ", "real", " ", "part", " ", "of", " ", "the", " ", "root"}],
        ",", " ", 
       RowBox[{
       "put", " ", "all", " ", "different", " ", "starting", " ", "values", 
        " ", "together", " ", "for", " ", "one", " ", "given", " ", "delay", 
        " ", "\[Tau]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\[Tau]", ",", "stepSizeDelay", ",", "maxDelay", ",", "stepSizeDelay"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "markersize"}], "}"}]}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"uses", " ", "Dots", 
        RowBox[{"(", "automatic", ")"}]}], ",", " ", 
       RowBox[{"medium", " ", "sized"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"12", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
     " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"enlarges", " ", "axes"}], "-", "labels"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<delay \[Tau] [s]\>\"", ",", "\"\<Re[\[Lambda]] [1/s]\>\""}], 
       "}"}]}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", "None"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"prevents", " ", "l"}], ";", 
       RowBox[{
        RowBox[{"ines", " ", "from", " ", "x"}], "-", 
        RowBox[{"axes", " ", "to", " ", "points"}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Joined", "\[Rule]", "True"}], ","}], 
      RowBox[{"(*", 
       RowBox[{"connects", " ", "points"}], "*)"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"\"\<BlueGreenYellow\>\"", ",", "colorValue"}], "]"}]}], 
         "]"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"PlotRangeClipping", "->", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6937175217882137`*^9, 3.6937175542465277`*^9}, {
   3.6937188730707307`*^9, 3.6937188807812815`*^9}, 3.693722718842659*^9, {
   3.6937228204114604`*^9, 3.6937229874107876`*^9}, {3.693723431173767*^9, 
   3.693723529848578*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0038500000000000006`],
     AbsoluteThickness[1.6]}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], {}, 
     GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.368417, 0.506779, 0.709798],
        FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
        PointSize->0.0038500000000000006`,
        Thickness->Absolute[1.6],
        FontSize->10,
        FontColor->RGBColor[
         0.368417, 0.506779, 0.709798]], {0, 0}], CompressedData["
1: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
OPk/nrGg1Q==
      "]], {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], {}, 
     GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.368417, 0.506779, 0.709798],
        FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
        PointSize->0.0038500000000000006`,
        Thickness->Absolute[1.6],
        FontSize->10,
        FontColor->RGBColor[
         0.368417, 0.506779, 0.709798]], {0, 0}], CompressedData["
1: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
Nxn/BzBmc4w=
      "]], {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], {}, 
     GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.368417, 0.506779, 0.709798],
        FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
        PointSize->0.0038500000000000006`,
        Thickness->Absolute[1.6],
        FontSize->10,
        FontColor->RGBColor[
         0.368417, 0.506779, 0.709798]], {0, 0}], CompressedData["
1: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
0Ij5bMFTkWIa1dUo/T89/LMi
      "]], {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], {}, 
     GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.368417, 0.506779, 0.709798],
        FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
        PointSize->0.0038500000000000006`,
        Thickness->Absolute[1.6],
        FontSize->10,
        FontColor->RGBColor[
         0.368417, 0.506779, 0.709798]], {0, 0}], CompressedData["
1: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
r+3TDeppFP8fzn6wKQ==
      "]], {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], {}, 
     GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.368417, 0.506779, 0.709798],
        FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
        PointSize->0.0038500000000000006`,
        Thickness->Absolute[1.6],
        FontSize->10,
        FontColor->RGBColor[
         0.368417, 0.506779, 0.709798]], {0, 0}], CompressedData["
1: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
      "]], {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], {}, 
     GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.368417, 0.506779, 0.709798],
        FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
        PointSize->0.0038500000000000006`,
        Thickness->Absolute[1.6],
        FontSize->10,
        FontColor->RGBColor[
         0.368417, 0.506779, 0.709798]], {0, 0}], CompressedData["
1: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
      "]], {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.05, 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"delay \[Tau] [s]\"", TraditionalForm], 
    FormBox["\"Re[\[Lambda]] [1/s]\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->Directive[12, FontFamily -> "Arial"],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0.05, 10.000000000000002`}, {-2.08180092519748, 
   0.06817902258565323}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6937175549158363`*^9, 3.693717950938946*^9, 3.693718170226967*^9, 
   3.6937192784873095`*^9, 3.6937196822433376`*^9, {3.6937197377497635`*^9, 
   3.6937197624598885`*^9}, 3.693719821708917*^9, 3.6937199603518524`*^9, 
   3.6937203810277977`*^9, 3.6937225799596086`*^9, 3.693722798291275*^9, {
   3.6937234468970594`*^9, 3.693723495648944*^9}, 3.6938852951080017`*^9, 
   3.6938854511377316`*^9, 3.6938856386319523`*^9, 
   3.693885757983032*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
ld8jCdlS5cgYeguF/UbTAoY8QoOgorUEAuXGe0I6dWndzEi8TxI/v8RI/IAk
DkQSKV/eLZFI+eYvMhLvlzicSKLN2mvrmyQSbdY1H+sboUQl8IGQz7jIdpnH
Asg+JLHwDQzXDwGuXgvvYiQ+KLGwSCJl4eslEikLX8dIfEhia0riRySsd0ok
Uqzfy0j8NcDai3EHI3FfiLWL8T0SiVRbQEn89Uzih/cSrLdLJFKWuYaR+FGJ
Zfr8OewRiT3Uq8zY7OIjgKsX2dUM10cl9uiVSKTssY2R+JsSe2xlJD4mscwW
iUTKMpTExyWW6ZFIpCxzJSPxCYllrmAkflximcslEm3WdR/Gn2Mk/g6wjFeP
75ZIpDD+rD/jfALYw4vsUvNYANnvSpBd6iIzY21rdFk3I/N8puREUPMnJVq+
BNcM1rZZvy8K1Erxvfho1foHEru9U1ZrOnpGtX5KwvUiXKu7PV3XapbPnQQq
/rTEtBfiipvHH8DltPlwPp30WhAAYDNv9zF/hwugogGAPU1pDXoflLo3HwD4
Q2Dwuk8D57sARmv4hw+baT0UQk9JDPx2JlEdkDjqea5E9ygJe7LJnqJEGvus
hMu5bs3phFJn0WesRbn2rjpU+x9JPHajv3bnpAfDOb8fqp3i/lYpd3uCGNX+
x8Dm3mA5G9u8PSkeK9OsLU9OKkRVpc+EAtPV8/rmJdZl/hywnFd365kY+JwE
4zqcvYq7Fjp1DOjjMxr/5oCanytYYjDpDVnirFDNOmd2aC7WUvG5oOYvSrS4
htHiFyVaXO1K7CpkEn/k/KnEd890a7FPwWhKbWoNNSd/Brh0+GpZ4dZSPDcj
PQsEtZpfCnFxNXYGtr7uJOiZ7UJDBTsJX5Fo8DS3VnOmiRX9FfBKDGn1BYlW
l2PbVa04Uxwnqdtjo+/u2MX+fy4xyjIXpP+NTD0R7BZ6SWKjJa3mhfFesPIt
JH8hse0prebQqs1C+EqQOUIp37ik+VBuoMKs2gKf7hBO4Wanv5T4zMm848o3
O30d+EKnD8lCF0n8NaLcO/8K6MaLaL6LaLb2veJrRTeuiT1NLwMcHT6vOpGx
kXQv0zcltpnbapyivs63CtzTvo635tmt5jTU1/l7ifVnuDWjvs53JBJPYCR+
N2QX1zOOdyUWX/qnkfkmUMs/SnBPc2tx2/6mHRaDWg5LLD3FZ+lWpph+IOE3
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\
\>"]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 997},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 14368, 249, 152, "Input"],
Cell[CellGroupData[{
Cell[14951, 273, 10407, 288, 569, "Input"],
Cell[25361, 563, 1181, 30, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26579, 598, 243, 3, 64, "Chapter"],
Cell[26825, 603, 278, 5, 30, "Text"],
Cell[27106, 610, 15931, 384, 780, "Input"],
Cell[43040, 996, 629, 17, 75, "Input"],
Cell[43672, 1015, 631, 18, 75, "Input"],
Cell[CellGroupData[{
Cell[44328, 1037, 5485, 129, 469, "Input"],
Cell[49816, 1168, 32634, 591, 380, 23697, 444, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

