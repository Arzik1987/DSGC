(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     71505,       1597]
NotebookOptionsPosition[     70783,       1569]
NotebookOutlinePosition[     71126,       1584]
CellTagsIndexPosition[     71083,       1581]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "work", " ", "is", " ", "licensed", " ", "under", " ", "the",
      " ", "Creative", " ", "Commons", " ", "4.0", " ", 
     RowBox[{"License", ".", "\[IndentingNewLine]", "To"}], " ", "view", " ", 
     "a", " ", "copy", " ", "of", " ", "the", " ", "license"}], ",", 
    RowBox[{
     RowBox[{"visit", " ", 
      RowBox[{"http", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"creativecommons", ".", "org"}], "/", "licenses"}], "/", 
         "by"}], "/", "4.0"}], "/", "\[IndentingNewLine]", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJztnQlYVWX+x2vK3DfABREhcV/DFbdEFBE1TVwIFQ0cxQVcQERwQUVcQcVd
cENAcU0by2mdzHGmrHRynllKLXV8qmeytCnT1vfP9/SnLnDPOe/Z7nsv9/d7
ns/MU3Hve+57fud8z3nf3/J47JyIab976KGHkqqV/E9ETMqAxMSY1NH1Sv5h
7OykGXGzp/4+fPb8qXFTE4NiHyn5l9klbHn4oYceLfl/xlgZSiy8hG0lXCjh
Af6EIAiCcHvul/D2Q7/oQ3h57bDREI8SipzgeAmCIAjnB3rhYUdHbjjBsREE
QRCuA3TDw0ZLim3/e+3atdnAwQPZs1Nj2NQZUwmCIAg3B3oQEhrCatas+WM5
PSn+fx15yvbft2nXhuXm57Ejzx8lCIIgiDJAH6AT5fQEOrK99J9L9Ibt3LdL
+LESBEEQzgt0okaNGj/ZaAl05ELpP/cPCRZ+jARBEITzA72w0ZIycb9YDxN9
fARBEITzA72w0ZIy+SPYXxF9fARBEITzA72Qi+8iLSEIgiB4IC0hCIIgjEJa
QhDuxYEjBWxL7la2cl0mS05LZtNmxbHICZFsyLAhLGxoGBsbNU669pNS57MV
azJYzs7NbH9xvvDjJpwb0hKCqNxs272dTZn+exbYNZBVq1ZNd05zlSpVpDyC
8ZMmsKwt2cJ/F+FckJYcZcUnD7O8A7vZ+s1ZbEnGEpaQOJtNip3MRkaMlOLc
evfrzcKHh7NnJkaxuPjpbMHiFJaZtUq6RguOFgo/foKw5fCpIyxj3Uo2aswo
1syvmWX1MrwaeLHQ8MEsZclCug4It9ISaMbqDWtYdEw069qjm3Sd1a1blz38
8MOGrik86zVq3Ii1btNa0pzElCSWV7Bb+O8l3IuCI4XSWlXtOrUt0w/Zd5bH
qkjPXXi+Ej0PhBgqu5Ygvz9magwL7NaFVa9R3aHXl4+vDxtc8ty2eMUSScdE
zwVROTn0XLF0rdarX8/hGlJBU6pUYcNGDmd7CvcKnxfCsVRGLcE+4YzZM1nH
zp3Y7373O+HXF8D7T9iwISxjbYa0BiF6jojKAd6BvX28hft3efDcFjnhGeld
SfQcEY6hMmkJ4k1QzxjPRqKvJSUaNmrIYuOm0BozoZvM9ZmsZauWwn1ZDbwr
TZ05Tfh8EdZTGbRk7aZ1rFefXob3PRwN1rXHjY9ke4v2CZ9DwnVA/Mcjjzyi
2+/wWW9vbxYYGMjCw8NZTEwMS01NZTk5OWz79u0sPT2dxcXFsZEjR7KgoCDm
7+9vKP4LIH6l8FiR8LkjrMOVtQQx8thDF60JRqlarSobGzWWFR07KHxOCecF
a6PYi9DjYx4eHmzChAmsuLiY3b17l2m177//nr3++uts3rx5rGVLfe9DAS0C
qO54JcYVtaTo+EHpeR6xI6J1wEwQC7Zwaarw+SWcj/ziA1L8iBZ/wrtHcnIy
e/PNN9mPP/6oWT+U7IMPPmDZ2dmsR48emo6pfv36bFXWauHzSZiPq2nJouWL
WWPvxsLv+1bSreRdi2IriVK25m1jvs18uf2nTp06bOXKlezevXum6oecnTx5
krVt25b7+PAMODtpjvB5JczFVbQE7/eo7eCoPRGM4+npydq3b8969erFWrRo
IfUGc5Se1KhRQ4rRET3vhFiQE8ubL4KYk4SEBPbf//7XIRpia3jvycvLYz4+
Ptw+PjpyjPD5JczDFbQEe3bYuzP7fg2twBryihUrWG5uLnv++efZhQsX2M2b
N6X1YXv29ddfsytXrrBz586xI0eOsM2bN7O0tDQWGhrKHnvsMdOPEXHEWNMT
fQ4Ix4N30zp163D5yfDhw9nVq1cdrCAV7dtvv2WZmZncsZRT4qYIn2fCHJxd
S3bl57KAli1Muzd37NhRilk5f/48++mnn0y9jqAzJ06cYLGxsaxxY/PW4Zq3
aC7FGYg+F4TjQP1FP38/Lv/As8zPP/9sqi8btT/96U/Sfr/asSOmDHWLRM83
YRxn1pK1G9cyD091f1QC7wqIe9y2bRu7ceOGw64lXNvvvPOOFF/ZtWtXw3pS
q3YtKadAtL8Q1oP13O5B6nva8O38/HzDvnrt2jW2aNEiFhYWxvr168cSExPZ
W2+9Zfh78f7eunVr1d+BteOcHZuFzzthDGfVkqSFSaxq1aq6773Y75g4cSK7
fv264WvCDDt79qy072JETzAfacsWCfcZwloixkWo+oKXl5cUn2XUsLZrbx8Q
9SIQA2b03f3OnTts0KBBqr8Hufv7Du4XPveEfpxRS1B7wcgeO/YuLl68aPg6
s8Kee+45TTEv5cGaAOoYi/YbwhrmJM9V9QHkd5ixN/Lyyy+rXmcbNmwwPM4P
P/zApk2bpvq7UPMItcVEnwNCH86kJXi3f3LAk7rvs507d2YvvfSSYd+32hDz
snv3bta0aVPd71y0Z1n5wJquWvwG9iCwdmTUsAbr66seZ1y9enVT4sIw3qhR
o1THG/rUUOHngdCHM2nJ6MjRuu6tuCcfOHDA9L10q+3+/fts3bp1Uj6AHj2h
GP3KRcvWrRTP+aOPPirlnpthyDXk9bVTp06ZMibyXVC3Rc2vN2zbKPxcENpx
Fi2ZmzxPl4707t1bSDy9mfavf/2LBQQEaP7tWO9CPXvRPkQYZ35qsur53rlz
p2k+d/z4cW4/Q4yvWXbr1i0pH19pPOTqij4fhHacQUt43u3tERUVxR48eGCa
n4u0L774ggUHB2ueA9TcQ38v0X5E6Ae9bZr4NFE8z8hBNNMuXbrE7WOHDh0y
dWzEN2LtTGlM9IUUfV4IbYjWEvTG9fTy1HwPRaxtZTPkR/LsUZYH+WxUc8V1
mTYrTvH8Ig7K7Hpa2A+vXVs9nx5rTh9//LGpY8OKiooUx0VfedHnhdCGSC1B
PnerNsprxOVBXGxhYaHpvu1MtmnTJs01xdHLgmJgXA/0sEG9Q7nzivxxM/ba
7RnigdX8avbs2ZaMDXvySeU4G/SRF31+CH5EaknwQG1rOoip//Of/2yZbzuT
nTlzRurFqGV+UI9ctD8R2oiKjlI8p/Hx8Zb62YwZMxTfh6ysD/n2228r/vZm
fs2oB6kLIUpLJsVO1nSfbNSokVPUG3Kk/f3vf2f16mnr4b1gcYpwnyL4QJ05
1PCUO5dYg3JEXAnq0CEnq0GDBtKYffv2ZVu3bnVIXZZx48Yp+jP1YHAdRGgJ
6sZr6cOOda2//vWvlvu1MxryZbSsd9WsVZPt2LtTuF8R6uA+qXQuUTfe0ebo
ul54PlSqAxkaPlj4eSL4cLSWoGad1r125I64s23ZskXTfPXs1VO4XxHqhA4J
lT2HTZo0cVj/EdGGPRm5efBq4CX8PBF8OFpLnho1QtN9MSUlRbSrO4VNnz5d
07ylpqcJ9y1CGaW6patXrzbVfy5fvsymTJki9W738/PTDXrAv/baa6Ye27//
/W9FX87eukH4uSLUcaSWwCe0rNeMGDHC5XLZrTLEcIaEhHDPHfr9Uv945wU5
VUrnD/dXswzxxFp6VKmBa/g///mPaccHQ685ufEmPhst/HwR6jhSS9q2b8ft
r+gzgn4gZL/Zl19+KdX1453DsVFjhfsXYR/0CJU7b6jTbqa9+OKLpulIKatW
rTL1GOfMmSM7VrsO7YSfL0IdR2kJT42IUhBPYkV+VGUwPK/yxnZVrVaV7Sna
K9zHiIoEtJCvmWP2uu6+fftM1xLc+820V155RfE9aH9xvvBzRijjKC1RunbK
g7rsZPKWk5ND7yYuzO6CPYq13v/yl7+Y6i+uoCXfffedYh4+5S06P47QEtQf
5PVR9HUjUzZcd9hD5ZlP9GNE7JxoPyN+Y3X2atnzhTwqs/cIXUFLYKNHy9cJ
F93jlVDHEVrSvmN7bh81ozeoOxjipHnnFHmhov2M+I2UxSmy52rYsGGm+4qr
aMnSpUtlx6P3a+fHai1Bj3Je/xw7dqzp/llZDc+uiE/gmVfEnqIWrWhfI34h
TqGWI+J2zTZX0RLk2suNRzmLzo/VWhISyhfHitxXd6uRYtROnz7Nfe0vyVgq
3NeIX4icECl7nhYvXmy6n7iKlhw9elR2vO5BPYSfN0IZK7UEdYBr1qzJ5ZtW
1iOtzIb9JZ75haaL9jXiF8KGhsmeJzybm22uoiVnz56VHQ/1xEWfN0IZK7Uk
KXU+l1+iHu7t27dN9013sPPnz3PNMep0HTxxSLi/EUelGjdy5+nYsWOm+4ir
aAn6i8qN17BRQ+HnjVDGSi1RumZsWbZsmel+CfvHP/4h5Wnl5+ezDRs2sLy8
POmf33//ffb5559bMibs008/Za+++iorLi6WnjM3b94s3SNQn/LGjRtSzysz
rU+fPlzznEI1hJ2C1m1ay54jPBuYba6iJcjFlRsP9V1FnzdCGau0BHGoSvU/
bfnnP/9pmj+eO3eOxcXFMV9fX9VxUT8PeWF4HjJq169fZ0uWLGFdunRRzB0A
6Ec8ZswYab/DjH55a9as4ZrnAYMGCPc34ijze9xf9hz97W9/M+wP5c1VtASx
7nLj4ZqiXibOjVVasmjZIi6fRB0eMwz9q8PDw3VfGz179pTeJbQa+kvgusJz
k55xvb29WWZmpiFNQZ8TnrFQo0u0vxFHWacnOsmeo5dfflm3H8iZq2jJrVu3
ZMdDHqPo80YoY5WWPD3maS6fTExMNOyD69at09QPRQ58x/Lly7lzxd58802p
16MZ1+aAAQPYZ599pnsOUMOVZ5xd+bnCfc7d6Rcs35vWiv4KrqIlFy9elB3P
x9dH+HkjlLFKS3j7uL/xxhu6fe/Bgwds0qRJpl8ngwcPZl988YXi2Lg+sVZl
5riNGzeW9EmPzZw5k2uMeQvmCfc5d0ep78LatWt1nX8lcxUtQV9qufGQ7yz6
vBHKWKElBUcKuWrLe3h4GFrbGT9+vOnXSClDhgyR7TGnFAdvFMS06alr+cIL
L3B9f9iwIcJ9zt2JjpV//pk3b57u60HOXEVLECMjN16vvr2FnzdCGSu0ZPnq
5Vz+GB0drdvv8Pxm1f28lOzs7ArjYm+CN2dGL7169ZL6lWix+/fvs+rVq6t+
N2KIRPucu5OQKN9HMCoqSvc1IWeuoiXr16+XHS98eLjw80YoY4WWzE6S70Vg
C57v9diFCxe490cQ/9G8eXM2atQolp6ezhYuXCj1hnv00UdVP4s1rHfffffX
cfEO1aZNG+7rDbXzBw0aJO0JYR8G63H169fn+mxaWprmeRk+fLjq99L+u3hQ
g0Du/PTu3VvXNaFkb7/9tnTvt0Xr+mxMTEyZz584ccL048R1Ijd+5IRnhJ83
QhkrtGTylMlc/nnnzh1dPvfUU09xfX/Dhg2lXFp7du3aNek+r/T54OBg9s47
7/z6maKiIq5xEQstl7+M36y2t4F45l27dmmeF/QnUju2atWqCfc5dwf9ReXO
D55x9F4XWgxrqVq0xBH9hLp37y47/rRZccLPG6GMFVoyMmKkqm9inUiPIf6e
x/c7deqk2kcU60LYZy//WawxlY8Pxt5J+/bq9Y49PT258s0WLFhQ4bNNmzZl
27dvl+Ls9djevXu55qbgaKFwv3NnUH9AaT0SzyxWm7NpCWIYlfKyMtZmCD9v
hDJWaEn/kP6qvqk3ryQ+Pp7L99GnjceQ/1667tS1a1dpD9ue8dYqQa4IjyHu
uFu3br9qyLZt23RrSKnx7r9v271duN+5O0F9gmTPT2RkpCE/4DFn0xKl5yD0
4KE6186PFVrSObCzqm/27dtXl8/x7Fd06NBB03cePnxYdf135cqVquPWqFFD
NZbY1tCrBWthiG02w7C3w6V3WauE+527M2uu/DNRnTp1TK+zU96cTUuU+mD1
ebKv8PNFqGOFlvj5q+fN6elVopQXawvWicy2kBD12vnTpk0zfVwthjU9nvlZ
QHW5hLOnaK9i/IgV+e+25kxaAt1U6s+bkJgg/HwR6lihJTx+mpCQoNnnjh8/
zuX3ZvfLhin5eik7duwwfVwtplTPyJa4+OnC/Y44ytq0k3/HRsyfleZMWoJ6
q3LjYg9lT+Fe4eeKUMdsLcG6plptQ4CYI62GezWP36MWr5nGe4+W22txpPHE
HD8zMUq43xFH2cRno2XPEd5ZkMtklTmTlvTo0UN23JatqW+Jq2C2luTm53H5
JvbatNqKFStUvxfXoNlrzaghz/ObLl++bOq4eoxnP4nyvpyDjds3KZ6noUOH
WuYnzqIlajUkKK/EdTBbS9bnyOeu2oL3Wq2GHCm170VOidmGmvg8vwn9F0Rb
//7qMXS9+1E9CmdBaZ0LvP7665b4iTNoCWo7tGzZUvG5MGfHZuHniODDbC3Z
tCOHyzdPnjyp2feSk5NVv7dWrVqm+zz60PP8pps3b5o+tlZDbozacfYPCRbu
d8QvZK7PVDxXiFOXqwtnxJxBSxAjozTmgEHUV9qVMFtL9hfL12ezZefOnZp9
j7cG1927d031ecT58oxrRU88rRYQEKB6nKhTK9rviN/o2Vs+1wQUFBSY7iei
teTrr79mjRo1kh2vymNV2I69O4WfG4IfK+K44Adqvon6VFptz549XH6P3rxm
GvIKeeIJDh06ZOq4eown3gx7vqL9jviNnJ2bFetq45yavQ8vUktwPaE+nuLz
ztNPCT8vhDas0JIGDRuo+uaMGTM0++Af//hHLr/H35lt6C2iNq4VvSe02Lff
fss1P7PmzhLud0RZwoaGKZ4zf39/qYenWSZSS9TWqpHzi/wb0eeE0IYVWtKy
lfx+Wil4LtFqWLviqQ+sJ2cQOSlK/RSRW6k2LmrTaTX0krt3757mz9kz9Jzn
uS+kpqcJ9zuiLHkFu6W6m0rnrU+fPobr7JSaKC3Jzc1VHYti1l0TK7Ske0/5
ep+lYI9YjwUGBqp+N+rmaall8v7770trDKjdeOrUKbt/o7ZPWIqWvojffPON
9L6DdeOcnBzDtVRQi5/nGNdsWCvc74iK4B6qdu7MymEUoSWokafW6wH5Ueil
J/pcENqxQktCh4Sq+iZ6iuix+fPnc/k+clF4DM95qA1WXufK16q/cuUK17jD
hg3j/i3l3/VRaz4vL09zH6xSO336NNcx0p6mc3L41BEW2K2L6vnLyMjQ5R+2
5mgtee+991THRK8GqgfsulihJWOj1NeDsCaqx+DTPH2ssFeO/X2leErsL4SF
ya9Th4eHSzXuSw3/zHPdoU4d4lSUTCnvEjWUCwsLNceC8tacLzp+ULjfEfbJ
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
EITrAh0ZX8ItJzgWgiAIwvWAfoz/P/wMss0=
          "], {{0, 141}, {403, 0}}, {0, 255},
          ColorFunction->RGBColor],
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{403, 141},
        PlotRange->{{0, 403}, {0, 141}}]}], "\[IndentingNewLine]", "Benjamin",
       " ", "Sch\[ADoubleDot]fer"}]}], ",", " ", 
    RowBox[{
     RowBox[{"benjamin", ".", 
      RowBox[{"schaefer", "@", "ds"}], ".", "mpg", ".", "de"}], "\n", 
     "Network", " ", "Dynamics"}], ",", " ", 
    RowBox[{
     RowBox[{
     "Max", " ", "Planck", " ", "Institute", " ", "for", " ", "Dynamics", " ",
       "and", " ", "Self"}], "-", "Organization"}]}], "*)"}], 
  "Text"]], "Input",
 CellChangeTimes->{{3.623663709433198*^9, 3.623663781061768*^9}, {
   3.623663978119752*^9, 3.623663996573287*^9}, {3.623664032062727*^9, 
   3.623664085311968*^9}, {3.623664120890615*^9, 3.623664121665863*^9}, 
   3.6236641823149157`*^9, 3.6857854493581033`*^9, {3.693725067509337*^9, 
   3.6937250708079824`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "Build", " ", "the", " ", "characteristic", " ", "equation", " ", "as", 
     " ", "you", " ", "did"}], "*)"}], "Subsubsection"], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "\[Tau]", ",", "funOmega", ",", "funTheta", ",", "\[CapitalTheta]", ",", 
      "\[CapitalOmega]", ",", "\[Theta]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", "0.1"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coupling", "=", "8"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"power", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfNodes", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjacency", "=", 
     RowBox[{"AdjacencyMatrix", "[", 
      RowBox[{"StarGraph", "[", "numberOfNodes", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Build", " ", "Jacobian"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"funOmega", "[", 
      RowBox[{"\[Theta]_", ",", "\[Omega]_", ",", "i_List"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"power", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "-", 
      RowBox[{"\[Alpha]", "*", 
       RowBox[{"\[Omega]", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"adjacency", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", "coupling", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"\[Theta]", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"funTheta", "[", 
      RowBox[{"\[Theta]_", ",", "\[Omega]_", ",", "i_List"}], "]"}], ":=", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalTheta]", "=", 
     RowBox[{"Array", "[", 
      RowBox[{"\[Theta]", ",", "numberOfNodes"}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"http", ":"}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"reference", ".", "wolfram", ".", "com"}], "/", "language"}],
         "/", "tutorial"}], "/", 
       RowBox[{"MakingDefinitionsForIndexedObjects", ".", "html"}]}]}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{"Array", "[", 
      RowBox[{"\[Omega]", ",", "numberOfNodes"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"funTheta", "[", 
         RowBox[{"\[CapitalTheta]", ",", "\[CapitalOmega]", ",", "i"}], "]"}],
         "/.", 
        RowBox[{"i", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"{", "\[CapitalTheta]", "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"funTheta", "[", 
         RowBox[{"\[CapitalTheta]", ",", "\[CapitalOmega]", ",", "i"}], "]"}],
         "/.", 
        RowBox[{"i", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"{", "\[CapitalOmega]", "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"funOmega", "[", 
         RowBox[{"\[CapitalTheta]", ",", "\[CapitalOmega]", ",", "i"}], "]"}],
         "/.", 
        RowBox[{"i", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"{", "\[CapitalTheta]", "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"funOmega", "[", 
         RowBox[{"\[CapitalTheta]", ",", "\[CapitalOmega]", ",", "i"}], "]"}],
         "/.", 
        RowBox[{"i", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"{", "\[CapitalOmega]", "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jac", "=", 
     RowBox[{"ArrayFlatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "d"}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jacD", "=", 
     RowBox[{"ArrayFlatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"numberOfNodes", ",", "numberOfNodes"}], "}"}]}], "]"}], 
          ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[Lambda]"}], "*", "\[Tau]"}], "]"}], "*", 
           "\[Gamma]"}]}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"charEqMatrix", "=", 
     RowBox[{"jac", "+", "jacD", "-", 
      RowBox[{"\[Lambda]", "*", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"2", "*", "numberOfNodes"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "fixed", " ", "point"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invars", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"x", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inconds", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "i", "]"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ineqns", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"power", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", 
        RowBox[{"-", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"adjacency", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", "coupling", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"x", "[", "j", "]"}], "-", 
              RowBox[{"x", "[", "i", "]"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}]}],
        ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"invals", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "i", "]"}], "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{"ineqns", ",", "inconds"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "[", "i", "]"}], "=", 
       RowBox[{"invals", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "numberOfNodes"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqn", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Det", "[", "charEqMatrix", "]"}], "/", "\[Lambda]"}], "}"}]}],
     " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"divide", " ", "by", " ", 
      RowBox[{"\[Lambda]", ".", " ", "No"}], " ", "idea", " ", "why", " ", 
      "the", " ", "equation", " ", "is", " ", "not", " ", "reduced", " ", 
      "then"}], "..."}], "*)"}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Apply", " ", "Simplify", " ", "to", " ", "get", " ", "the", " ", 
       "reduced", " ", "equation"}], ",", " ", 
      RowBox[{"AND", ":", " ", 
       RowBox[{
        RowBox[{"do", " ", "not", " ", "set"}], " ", "==", "0"}]}], ",", " ", 
      RowBox[{
      "otherwise", " ", "we", " ", "loose", " ", "a", " ", "factor", " ", 
       RowBox[{"Exp", "[", "\[Lambda]\[Tau]", "]"}]}]}], "*)"}], "Text"], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "@", "eqn"}]}]}]], "Input",
 CellChangeTimes->{{3.6936445254213142`*^9, 3.6936445374565144`*^9}, {
  3.6936445756465287`*^9, 3.6936446206802034`*^9}, {3.6936454095165358`*^9, 
  3.693645412084284*^9}, {3.6936454564695187`*^9, 3.6936454889896708`*^9}, {
  3.693718900589335*^9, 3.693718955523486*^9}, {3.693719002281937*^9, 
  3.6937190331156282`*^9}, {3.693719297813757*^9, 3.6937193304527974`*^9}, {
  3.6937193689058695`*^9, 3.6937193729101405`*^9}, {3.693719412541789*^9, 
  3.6937194409148884`*^9}, {3.6937213869329643`*^9, 3.693721395701284*^9}, {
  3.6937214583739414`*^9, 3.6937214770795045`*^9}, {3.693723540013048*^9, 
  3.6937235446093955`*^9}, {3.693723664102676*^9, 3.6937236658677063`*^9}, {
  3.69372371041761*^9, 3.6937237105748568`*^9}, {3.693724221899485*^9, 
  3.6937242655499687`*^9}, {3.693724298371934*^9, 3.6937242985092664`*^9}, {
  3.6937247132228217`*^9, 3.693724729747817*^9}, {3.6937247762032485`*^9, 
  3.6937248269048405`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Lambda]", " ", "\[Tau]"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.0625`", " ", "\[Lambda]"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Lambda]", " ", "\[Tau]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"3.968626966596886`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.05`", " ", "\[Lambda]"}], "+", 
        RowBox[{"0.5`", " ", 
         SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[Lambda]", " ", "\[Tau]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1.5874507866387546`", "\[VeryThinSpace]", "+", 
        RowBox[{"15.884507866387544`", " ", "\[Lambda]"}], "+", 
        RowBox[{"0.2`", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox["\[Lambda]", "3"]}]}], ")"}]}]}], ")"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6937242988886843`*^9, {3.6937247198521214`*^9, 3.6937247301945333`*^9}, 
   3.693724827566989*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["(*Find the roots by sampling a pre-defined band *)", "Chapter",
 CellChangeTimes->{{3.693716348093341*^9, 3.6937163560427103`*^9}, {
  3.6937165774794717`*^9, 3.6937165975894585`*^9}, {3.6937167022307944`*^9, 
  3.6937167060612264`*^9}}],

Cell["\<\
Some comments regarding timing: On my Laptop this takes ~80 sec with 4 i7 \
cores running, when using maxDelay=10;stepSizeDelay=0.05;\
\>", "Text",
 CellChangeTimes->{{3.6937192059620028`*^9, 3.6937192575383716`*^9}, {
  3.693722775051841*^9, 3.6937227858522434`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Lets", " ", "assume", " ", "we", " ", "have", " ", "the", " ", 
      "characteristic", " ", "equation"}], ",", " ", 
     RowBox[{
      RowBox[{"you", " ", "could", " ", "re"}], "-", 
      RowBox[{
      "write", " ", "the", " ", "above", " ", "to", " ", "return", " ", "the",
        " ", "characteristic", " ", "function", " ", "as", " ", "a", " ", 
       "function", " ", "and", " ", "divide", " ", "it", " ", "by", " ", 
       "\[Lambda]"}]}]}], "*)"}], "Text"], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "eqn", 
     StyleBox["]", "Input"]}], 
    StyleBox[";", "Input"]}], 
   StyleBox["\[IndentingNewLine]", "Input"], 
   RowBox[{
    RowBox[{
     RowBox[{"eqn", "[", 
      RowBox[{"\[Lambda]_", ",", "\[Tau]_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"1", "/", "\[Lambda]"}], "*", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Lambda]"}], " ", "\[Tau]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0.0625`", " ", "\[Lambda]"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Lambda]", " ", "\[Tau]"}]], " ", 
         RowBox[{"(", 
          RowBox[{"3.968626966596886`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.05`", " ", "\[Lambda]"}], "+", 
           RowBox[{"0.5`", " ", 
            SuperscriptBox["\[Lambda]", "2"]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[Lambda]", " ", "\[Tau]"}]], " ", 
         RowBox[{"(", 
          RowBox[{"1.5874507866387546`", "\[VeryThinSpace]", "+", 
           RowBox[{"15.884507866387544`", " ", "\[Lambda]"}], "+", 
           RowBox[{"0.2`", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           RowBox[{"1.`", " ", 
            SuperscriptBox["\[Lambda]", "3"]}]}], ")"}]}]}], ")"}]}]}], ";"}], 
   StyleBox["\[IndentingNewLine]", "Input"], 
   RowBox[{
    StyleBox[
     StyleBox[
      RowBox[{"(", "*"}]], "Text"], 
    StyleBox[
     RowBox[{
     "Turn", " ", "off", " ", "some", " ", "unneccessary", " ", "messages", 
      " ", 
      RowBox[{"(", 
       RowBox[{
       "be", " ", "careful", " ", "to", " ", "know", " ", "what", " ", "you", 
        " ", "do"}], ")"}]}], "Text"], 
    StyleBox[
     RowBox[{
      StyleBox["*", "Text"], 
      StyleBox[")", "Text"]}]]}], 
   StyleBox["\[IndentingNewLine]", "Subsubsection"], 
   RowBox[{
    RowBox[{"Off", "[", 
     RowBox[{"InterpolatingFunction", "::", "dmval"}], "]"}], ";", 
    RowBox[{"ParallelEvaluate", "[", 
     RowBox[{
      RowBox[{"Off", "[", 
       RowBox[{"InterpolatingFunction", "::", "dmval"}], "]"}], ";", 
      RowBox[{"Off", "[", 
       RowBox[{"FindRoot", "::", "lstol"}], "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Off", "[", 
     RowBox[{"FrontEndObject", "::", "notavail"}], "]"}], ";", 
    RowBox[{"ParallelEvaluate", "[", 
     RowBox[{"Off", "[", 
      RowBox[{"FrontEndObject", "::", "notavail"}], "]"}], "]"}], ";", 
    RowBox[{"Off", "[", 
     StyleBox[
      RowBox[{"FindRoot", "::", "precw"}], "MessageName"], 
     StyleBox["]", "MessageName"]}], 
    StyleBox[";", "MessageName"]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "the", " ", "sampling", " ", "delay"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minDelay", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stepSizeDelay", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxDelay", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "How", " ", "deep", " ", "and", " ", "how", " ", "mich", " ", "do", " ", 
      "we", " ", "want", " ", "to", " ", 
      RowBox[{"sample", "?"}]}], "*)"}], "Text"], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cutOff", "=", 
     RowBox[{"-", "100"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfTrysForMinimalDelay", "=", "1000"}], ";"}], 
   "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Generate", " ", "a", " ", "list", " ", "of", " ", "eigenvalues", " ", 
       "for", " ", "delay", " ", "\[Tau]"}], "=", "stepSizeDelay"}], "*)"}], 
    "Text"], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]samplingDelayUnfiltered", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Lambda]", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eqn", "[", 
            RowBox[{"\[Lambda]", ",", 
             RowBox[{"stepSizeDelay", "+", "minDelay"}]}], "]"}], "==", " ", 
           "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", 
            RowBox[{
             RowBox[{"RandomComplex", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"cutOff", "-", 
                 RowBox[{"15", "I"}]}], ",", 
                RowBox[{"10", "+", 
                 RowBox[{"15", "I"}]}]}], "}"}], "]"}], "+", 
             RowBox[{"0.01", "I"}]}]}], "}"}], ",", 
          RowBox[{"MaxIterations", "->", "10000"}], ",", 
          RowBox[{"WorkingPrecision", "->", "30"}], ",", 
          RowBox[{"AccuracyGoal", "->", "4"}]}], "]"}]}], ",", 
       RowBox[{"{", "numberOfTrysForMinimalDelay", "}"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"\[Lambda]samplingDelayFiltered", "=", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"\[Lambda]samplingDelayUnfiltered", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"#1", "-", "#2"}], "]"}], "<", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], "&"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"numberOfEigenvalues", "=", 
     RowBox[{"Length", "[", "\[Lambda]samplingDelayFiltered", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "define", " ", "table", " ", "for", " ", "all", " ", "eigenvalues", " ", 
      "and", " ", "all", " ", "delays"}], "*)"}], "Text"], "\n", 
   RowBox[{
    RowBox[{"\[Lambda]TowardsMaxDelay", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "numberOfEigenvalues"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]counter", ",", "1", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"maxDelay", "-", "stepSizeDelay", "-", "minDelay"}], 
            ")"}], "/", "stepSizeDelay"}], "+", "1"}]}], "}"}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]TowardsMaxDelay", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
     "\[Lambda]samplingDelayFiltered"}], ";"}], "\n", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
       "Based", " ", "on", " ", "the", " ", "initial", " ", "eigenvalues", 
        " ", "found", " ", "at", " ", "\[Tau]"}], "=", "stepSizeDelay"}], ",",
       " ", 
      RowBox[{
      "assume", " ", "that", " ", "the", " ", "curves", " ", "are", " ", 
       "smooth", " ", "and", " ", "continue", " ", "along", " ", "the", " ", 
       "so", " ", "far", " ", "determined", " ", "eigenvalues"}]}], "*)"}], 
    "Subsubsection"], 
   StyleBox["\[IndentingNewLine]", "Subsubsection"], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Explicitly", " ", "determine", " ", "the", " ", "eigenvalues", " ", 
      "for", " ", "\[Tau]counter"}], "=", 
     RowBox[{"2", " ", "and", " ", "3"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Tau]", "=", 
        RowBox[{"stepSizeDelay", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Tau]counter", "-", "1"}], ")"}], "*", 
          "stepSizeDelay"}]}]}], ";", "\n", 
       RowBox[{
        RowBox[{"\[Lambda]TowardsMaxDelay", "[", 
         RowBox[{"[", 
          RowBox[{"index", ",", "\[Tau]counter"}], "]"}], "]"}], "=", 
        RowBox[{"\[Lambda]", "/.", 
         RowBox[{
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"eqn", "[", 
              RowBox[{"\[Lambda]", ",", "\[Tau]"}], "]"}], "==", " ", "0"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"\[Lambda]", ",", 
              RowBox[{
               RowBox[{"\[Lambda]TowardsMaxDelay", "[", 
                RowBox[{"[", 
                 RowBox[{"index", ",", 
                  RowBox[{"\[Tau]counter", "-", "1"}]}], "]"}], "]"}], "+", 
               RowBox[{"0.01", "*", "I"}]}]}], "}"}], ",", 
            RowBox[{"PrecisionGoal", "->", "4"}], ",", 
            RowBox[{"AccuracyGoal", "->", "4"}], ",", " ", 
            RowBox[{"MaxIterations", "->", "300"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\n", ",", 
      RowBox[{"{", 
       RowBox[{"index", ",", "numberOfEigenvalues"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]counter", ",", "2", ",", "3"}], "}"}]}], "]"}], ";"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Continue", " ", "for", " ", "\[Tau]counter"}], 
      "\[GreaterEqual]", "3"}], ",", " ", 
     RowBox[{
     "to", " ", "use", " ", "extrapolation", " ", "to", " ", "find", " ", 
      "next", " ", "eigenvalue"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DistributeDefinitions", "[", "eqn", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetSharedVariable", "[", 
     RowBox[{
     "\[Tau]counter", ",", "stepSizeDelay", ",", "\[Lambda]TowardsMaxDelay", 
      ",", "\[Lambda]TowardsZero"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Do", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Lambda]TowardsMaxDelay", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\[Tau]counter"}], "]"}], "]"}], "=", 
       RowBox[{"ParallelTable", "[", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "calculate", " ", "the", " ", "actual", " ", "delay", " ", "for", 
          " ", "the", " ", "iteration"}], "*)"}], "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Tau]", "=", 
           RowBox[{"minDelay", "+", "stepSizeDelay", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Tau]counter", "-", "1"}], ")"}], "*", 
             "stepSizeDelay"}]}]}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "the", " ", "new", " ", "eigenvalue", " ", "is", " ", "found", 
             " ", "by", " ", "using", " ", "the", " ", "previous", " ", 
             "one"}], ";", " ", 
            RowBox[{
            "the", " ", "iteration", " ", "starts", " ", "delayed", " ", "by",
              " ", "three", " ", "as", " ", "they", " ", "were", " ", 
             "calculated", " ", "already"}], ";", "\n", 
            RowBox[{
            "note", " ", "that", " ", "we", " ", "add", " ", "a", " ", 
             "small", " ", "imaginary", " ", "number", " ", "to", " ", "the", 
             " ", "previous", " ", "\[Lambda]", " ", "to", " ", "allow", " ", 
             "real", " ", "eigenvalues", " ", "to", " ", "become", " ", 
             "complex"}]}], "*)"}], "\n", 
          RowBox[{"initialGuess", "=", 
           RowBox[{
            RowBox[{"Interpolation", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"\[Tau]counter", "-", "3", "-", "1"}], ")"}], "*",
                    "stepSizeDelay"}], ",", 
                  RowBox[{"Indexed", "[", 
                   RowBox[{"\[Lambda]TowardsMaxDelay", ",", 
                    RowBox[{"{", 
                    RowBox[{"index", ",", 
                    RowBox[{"\[Tau]counter", "-", "3"}]}], "}"}]}], "]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"\[Tau]counter", "-", "2", "-", "1"}], ")"}], "*",
                    "stepSizeDelay"}], ",", 
                  RowBox[{"Indexed", "[", 
                   RowBox[{"\[Lambda]TowardsMaxDelay", ",", 
                    RowBox[{"{", 
                    RowBox[{"index", ",", 
                    RowBox[{"\[Tau]counter", "-", "2"}]}], "}"}]}], "]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"\[Tau]counter", "-", "1", "-", "1"}], ")"}], "*",
                    "stepSizeDelay"}], ",", 
                  RowBox[{"Indexed", "[", 
                   RowBox[{"\[Lambda]TowardsMaxDelay", ",", 
                    RowBox[{"{", 
                    RowBox[{"index", ",", 
                    RowBox[{"\[Tau]counter", "-", "1"}]}], "}"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"InterpolationOrder", "->", "2"}]}], "]"}], "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Tau]counter", "-", "1"}], ")"}], "*", 
             "stepSizeDelay"}], "]"}]}], ";", "\n", 
          RowBox[{"\[Lambda]", "/.", 
           RowBox[{
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"eqn", "[", 
                RowBox[{"\[Lambda]", ",", "\[Tau]"}], "]"}], "==", " ", "0"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"\[Lambda]", ",", 
                RowBox[{"initialGuess", "+", 
                 RowBox[{"0.01", "*", "I"}]}]}], "}"}], ",", 
              RowBox[{"PrecisionGoal", "->", "4"}], ",", 
              RowBox[{"AccuracyGoal", "->", "4"}], ",", " ", 
              RowBox[{"MaxIterations", "->", "300"}]}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", ",", 
         RowBox[{"{", 
          RowBox[{"index", ",", "numberOfEigenvalues"}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]counter", ",", "4", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"maxDelay", "-", "stepSizeDelay", "-", "minDelay"}], ")"}],
           "/", "stepSizeDelay"}], "+", "1"}]}], "}"}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.693716655983759*^9, 3.6937167412638826`*^9}, {
   3.6937167780917997`*^9, 3.693716915467701*^9}, {3.69371698033403*^9, 
   3.6937170169678774`*^9}, {3.6937170953121347`*^9, 3.693717173813487*^9}, {
   3.6937172212764263`*^9, 3.6937174869924793`*^9}, {3.6937175997789016`*^9, 
   3.693717669518897*^9}, 3.693717746710281*^9, {3.6937178556715355`*^9, 
   3.6937178562866087`*^9}, 3.693717889522051*^9, {3.6937179783822117`*^9, 
   3.6937180083121743`*^9}, {3.6937181497260303`*^9, 
   3.6937181636847124`*^9}, {3.6937181954340367`*^9, 
   3.6937182022363505`*^9}, {3.693718252306817*^9, 3.693718274949218*^9}, {
   3.693719137681615*^9, 3.693719191431782*^9}, {3.6937192491667166`*^9, 
   3.6937192740381603`*^9}, 3.69371959057642*^9, {3.693719676304654*^9, 
   3.693719679228386*^9}, {3.6937197205651236`*^9, 3.6937197207250433`*^9}, 
   3.6937197530000834`*^9, {3.6937198135592957`*^9, 3.6937198141812963`*^9}, {
   3.693719882807757*^9, 3.693719905976327*^9}, {3.693720313483884*^9, 
   3.693720371001687*^9}, {3.693721421729411*^9, 3.6937214219416485`*^9}, 
   3.6937214934357443`*^9, 3.6937215439246297`*^9, 3.693721935009012*^9, {
   3.6937225486385098`*^9, 3.6937225653277884`*^9}, {3.693722696751686*^9, 
   3.693722699813628*^9}, {3.693723713595996*^9, 3.6937237439195976`*^9}, {
   3.693723985278421*^9, 3.69372398548595*^9}, 3.6937248408833485`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Export", " ", "longer", " ", "calculation"}], "*)"}], 
   "Subsubsection"], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<2 node eigenvalues 0.05 to 10.wdx\>\"", ",", 
      "\[Lambda]TowardsMaxDelay"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.693719039110049*^9, 3.693719087101136*^9}, {
   3.6937227150985622`*^9, 3.6937227152635355`*^9}, 3.6937227908717527`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Import", " ", "longer", " ", "calculation"}], "*)"}], 
   "Subsubsection"], 
  StyleBox["\[IndentingNewLine]", "Subsubsection"], 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]TowardsMaxDelay", "=", 
     RowBox[{
     "Import", "[", "\"\<2 node eigenvalues 0.05 to 10.wdx\>\"", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.693719039110049*^9, 3.693719102880828*^9}, 
   3.6937227245551243`*^9, 3.6937227961954927`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "Show", " ", "the", " ", "results", " ", "in", " ", "a", " ", 
             RowBox[{"ListPlot", ":", " ", 
              RowBox[{
              "The", " ", "highest", " ", "curve", "  ", "is", " ", "the", 
               " ", "mode", " ", "we", " ", "typically", " ", "see", " ", 
               "when", " ", "considering", " ", "only", " ", "the", " ", 
               RowBox[{"difference", ".", " ", "The"}], " ", "initially", " ",
                "middle", " ", "curve", " ", "then", " ", "destabilizes", " ",
                "the", " ", "system", " ", "for", " ", "large", " ", 
               "delays"}]}]}], ";", " ", 
            RowBox[{
            "we", " ", "are", " ", "missing", " ", "many", " ", "other", " ", 
             "curves"}]}], ",", " ", 
           RowBox[{
           "that", " ", "all", " ", "start", " ", "at", " ", "very", " ", 
            "negative", " ", "real", " ", "parts", " ", "and", " ", "would", 
            " ", "contribute", " ", "to", " ", "the", " ", 
            RowBox[{"oscillations", ".", " ", "You"}], " ", "can", " ", 
            "find", " ", "those", " ", "if", " ", "you", " ", 
            "\[IndentingNewLine]", "a"}]}], ")"}], " ", "start", " ", "the", 
         " ", "extensive", " ", "random", " ", "sampling", " ", "at", " ", 
         "a", " ", "higher", " ", "delay", "\[IndentingNewLine]", "b"}], 
        ")"}], " ", "when", " ", "you", " ", "increase", " ", "the", " ", 
       "parameter", " ", "\"\<offset\>\"", " ", "to", " ", "VERY", " ", 
       "negative", " ", 
       RowBox[{"numbers", " ", "~", 
        RowBox[{"-", 
         RowBox[{"10", "^", "3"}]}]}]}], "..."}], "-", 
     RowBox[{"10", "^", "10"}]}], "*)"}], "Subsubsection"], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"maxDelay", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stepSizeDelay", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"markersize", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colorValue", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DiscretePlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Re", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "\[Lambda]TowardsMaxDelay", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"\[Tau]", "/", 
            RowBox[{"(", "stepSizeDelay", ")"}]}], ",", "1"}], "]"}], "]"}], 
        "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "take", " ", "real", " ", "part", " ", "of", " ", "the", " ", "root"}],
        ",", " ", 
       RowBox[{
       "put", " ", "all", " ", "different", " ", "starting", " ", "values", 
        " ", "together", " ", "for", " ", "one", " ", "given", " ", "delay", 
        " ", "\[Tau]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\[Tau]", ",", "stepSizeDelay", ",", "maxDelay", ",", "stepSizeDelay"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "markersize"}], "}"}]}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"uses", " ", "Dots", 
        RowBox[{"(", "automatic", ")"}]}], ",", " ", 
       RowBox[{"medium", " ", "sized"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"12", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}]}], ",", 
     " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"enlarges", " ", "axes"}], "-", "labels"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<delay \[Tau] [s]\>\"", ",", "\"\<Re[\[Lambda]] [1/s]\>\""}], 
       "}"}]}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", "None"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"prevents", " ", "l"}], ";", 
       RowBox[{
        RowBox[{"ines", " ", "from", " ", "x"}], "-", 
        RowBox[{"axes", " ", "to", " ", "points"}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Joined", "\[Rule]", "True"}], ","}], 
      RowBox[{"(*", 
       RowBox[{"connects", " ", "points"}], "*)"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", 
          RowBox[{"ColorData", "[", 
           RowBox[{"\"\<BlueGreenYellow\>\"", ",", "colorValue"}], "]"}]}], 
         "]"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"PlotRangeClipping", "->", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6937175217882137`*^9, 3.6937175542465277`*^9}, {
   3.6937188730707307`*^9, 3.6937188807812815`*^9}, 3.693722718842659*^9, {
   3.6937228204114604`*^9, 3.6937229874107876`*^9}, {3.693723431173767*^9, 
   3.693723529848578*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0038500000000000006`],
     AbsoluteThickness[1.6]}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], {}, 
     GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.368417, 0.506779, 0.709798],
        FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
        PointSize->0.0038500000000000006`,
        Thickness->Absolute[1.6],
        FontSize->10,
        FontColor->RGBColor[
         0.368417, 0.506779, 0.709798]], {0, 0}], CompressedData["
1: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
QiaCyP8B22Ca4A==
      "]], {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], {}, 
     GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.368417, 0.506779, 0.709798],
        FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
        PointSize->0.0038500000000000006`,
        Thickness->Absolute[1.6],
        FontSize->10,
        FontColor->RGBColor[
         0.368417, 0.506779, 0.709798]], {0, 0}], CompressedData["
1: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
fC7gtyKQuU3bpPg/dwqy8A==
      "]], {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], {}, 
     GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.368417, 0.506779, 0.709798],
        FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
        PointSize->0.0038500000000000006`,
        Thickness->Absolute[1.6],
        FontSize->10,
        FontColor->RGBColor[
         0.368417, 0.506779, 0.709798]], {0, 0}], CompressedData["
1:eJw11nk81FsfB3CMQrJvM5ZZrXUrt6ieHpxvWtRF+2Kt1JOruiJar7pZW+nm
qWhsLSLLyHpLktFCiJJU9jUT4anbgivVI/M95/X6/TGvOed9PvP9/s5vfryt
fmu2M2RkZCrGL9nxS278ihP+GOkkeXh00nn3crH0821S/0iZ0XK1TGw158d4
QNyvb4m8ZP0Qv68kLmvfbL7Nui+WmRi15MRoQMbvlSXiielznhOThYl5Ow8W
in/1/jFeEuNMFmtNci6ubySqenIlM3xTxDXVP0YLUb35TtVs81n0OkjBpu+G
bb/+QaTzO4mh7uV9M8wTiDRPN6lY+NS8aUsqeTKx/jWpCdRuPnpBRKT7SUiH
vztnpUsOkZ3wesnq0Oz8aK9c9PrI8KekGTP35qLXT1gLpigaXc5Bb4BYDqyw
CenPQu9/RM6q7txupXQizfeemNYw0rbdvEqk+d8TuxGLsljdGPT/JndvWtyw
H/DH9R9IkyjurJvsWaznRzK6POOMM0kWS/N9Il2+kUYJZ7KxHp+I/ZxuYZ7v
TazXZxK4/kPctbC7WM8hUnva0UR9/330homT54rpU6zL0Rsha/sLHS2LK9Eb
IalBdlULj1aj9w/RzZIzNY6qQW+UzFTuaSrSrEbvC8lRGcza7VuB3hiZ0W11
yPLpA/TGyGjjsqqrtiXofSUpnmo27mf+Qu8buVvuryy6lYned+JwYCyx4EUC
9lcG0tRdU8N/OiSemO4tA4nhTuqXJCewnjKQ15++PyonnkjvJ1kI8q1wD2lK
JhPbCWXhQlKN33yvNOyHHLjN5kQ5nMwkUk8ONg1cMvTZlYWeHJx2OFTsaHgD
PQZcCJRbcF+Uhf1iAMPjdV29hQg9eRhySeVWJqSjJw+utgIDGeVU9OQho0/J
LHnfFfQmweaf11lq58WiNwm8/vAbabkRjt5kKBAc64vX34e/dzJEaPKmijbF
Yj0nwy+5SjdC+Kl4fhSA+f53UwsOPS8K8Cg7JDrfuhDrpwgNc3OGQjeUoqcI
3Id5J+L/W4aeIhT91FEWvqMaPSVYYVnk0/iyDj0lqEt2Wir//BV6U+Cktl/B
tEPN6E0Bx1mf3n743oreFAhLsZfRaG5HTxn2hdya7HitAz1lmO9/4y996070
psJ/zu28r5DRid5USOs88iBaqQu9qWDbdyd+lksXeirQ3rHLnCnsQk8FPMs7
+3KfdKGnCsarA5e8GO1CTxUCGnZ8+czuRk8VNl0TLrKz6UZPDWrPB8y+srYb
PTWIEMuHS7Z3o6cOXEaafmEgna8Oo8ILsVePdKOvDio3f4tgh9P16lDzapn9
ueN0P3X4mJCs4HaCehqwMz3fqfQY9TQgNP24SCmMehqwNGWv754j1NOAeZ6+
4un7qTc+P8Hunrcv9TQhOzTHxXEb9TThs4lI8nUj9TRBYc+OtiRH6mlC7xvm
Ekc76mmCyflVbCNL6mlBmtuliuk86mnBL9ZfnCI1uvG8akHxsXnJq2WppwXm
pg6Dke9pv7Rg4ZWiDOd22g9tWLU0vedKDe2fNuS0fHONudOFnjY4xHyNnZtO
+6kNnUFX+FEx1NOGb5n7TyWHUU8H/Ho9IkL9qacDjezLjNme1NOBbQol9reX
U08HBuSN29hzqacDLddM2nz41NOFrSrbyhJUqacLQ4pPE8SjnejpwsX+I99e
SDrRG/+s68V5XdeJni6Yz1dtGCyh97MemO3MEg2N389STw8e95vUy8ZSTw/0
FifZaYZRTw/26GyNn+ZHPT1gFdtucnanHhMuDno+POxAPSZUvxU3FM2hHhNU
fGwPKnGpxwQvNbv1O6dSjwnNPnpf2kY60GOBkYzgmU9PB3osCC2PNlKq60CP
BXs+yineK6HnlQUuX7vjozM70GPBodykqqCL1NOHT4NC3+AI6umDmYrGsssB
1NOHlRllii2bqacPu5X/dLRypp4+xE6riktfQD0DKFXL8rcxp54BPHh7dP6g
DvUM4DG/ZGUxg3oGwCi0V13X3Y6eAbifsnTwFbejZwi+6etLHsbT55EhVA3E
PXc72I6eIUg0ltfPWt+OniHIvgoYWzSbeoaw5o/FB2PVqGcErKcLtk8bbEPP
CDoPL3o+VtWGnhEE5FeUqaa3oWcEKVvSrbYcb0PPCD7ncVT+3t6GHht6jWNn
31tMPTa8WxV4tFZAPTb8k11RxmZQjw2uzoq1mV30ecsGj+2XvA7cb0WPA3/W
np4XcrUVPQ7kK0sUK0Nb0eOAfYLX8RXbWtHjQEzow80ai6nHgXqPDQs0TKjH
heRnDnecJ+N8FheUnmiGlb9pwf9rLizSq58ZVNkiXe/EhZ7rSS67MltwPy5c
XFoZGxPVIn0/COZCafHckDG/FtyfC4nKwusJa9DL50LjcHb8fmv0qrnQYhM2
cJKJnoQLYfkXzV5+acb3DR5szDNtdGtvxnw8COm1j9R70Iz5ePDmncpj5evN
mI8HXU+a2fNON2M+HtxNdFUX+qEXzIOnwTlmP69DT8iDA8apA9/mo5fPA25P
kUSWjV41D8RVSxL/xUBPwgPbw2diU3qbMB8fOM49HkueNGE+PuhG3N7LLGjC
fHxY+T3Lmx3XhPn4wLQVFW0IbsJ8fHg0aWik1Bu9YD7IiawzPJzRE/Lho2rU
Rgsr9PL5EPBb8ilTA/Sq+dCll1ezVg49yfj+5mczc/oaMZ8AgmbczbZ51oj5
BHBWZpf3cGEj5hNA9a1jHh2XG8UT77tOAhisK+UMn2jEfAJ4n3be7t970AsW
wEfjlctErugJBZDaql2z3B69fAGMRr/x1JqOXrUAnHQyIxW10ZMIIKDAYsD8
awPmM4YYQ6b6XkmD+P+ZyrhU
      "]], {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], {}, 
     GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.368417, 0.506779, 0.709798],
        FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
        PointSize->0.0038500000000000006`,
        Thickness->Absolute[1.6],
        FontSize->10,
        FontColor->RGBColor[
         0.368417, 0.506779, 0.709798]], {0, 0}], CompressedData["
1:eJw11ns4VPkfwPFxl9sw4zYuYy6lyyaVUpu283FLLNuFtl0Jlcv+rF8hpfWj
lJhIWrVCVki11Lq0tFuKmZSuqF+hlDLjMu4M45rbis/5Ps/3j/Oc7/f1fT/z
zHnOYe87uMNXjkKhPJ2dMrNTdnZeSvsy8ojcZGqEt4qXYP76LpG3dP3Eu09O
gjUWX8ZDQiWJx75tB3j/GVE3ubIg74algDI3XhGmudyrybqrBHPLLd4QK6/3
u1ayvxL4+30Z9UTCCvUNHu6muL+BWLf4VA4McATVVV9GI/H/284/P/4PCz0h
kR4bNuk8bITrRUSXecbZwB4G9rQQFvnPOQcj9QQ1c/tbiUt/MIutonTwPDER
0BuirNhAF8jMeR3E0uhdirRQGnqdRG7XiWFNWy30uon+w+KyICtN9HqIzEUh
EcdvaKDXR6j0nMlo0FbHPglR01ceHvenKvZLiIQnR5PMAlTQHyCY0c2P2x0W
4P5BYmtjqAPFWhnPkxLvC9xTs7crYd8Q4f2L1Pv6EUX0hgit/5XUH8pXQG+Y
cMm2dfwolUdvhCjXr3bX2CKP3ijx/n3z4vBcOfTGiOsvLVk1dDn0xoiQ8yvz
2k/LojdOjEYxRS8UZdH7TFBT7yhkJ8igN0H8fWfraC5DBr1J4qGeQsw3+RT0
JokaS+2hF5sp6E0RZTZrvK69mOHPe9OE6wvKgTL6DH/emyFo0wkWdN9p/vzv
R4G6KzKJ/eVT/LnlfhQIiLexKWBN8ed9ChwIPnPhXtwkf/7/JAODGWHrzo9P
8OeOS5OB5qw/Lt49OIGeLGRFWrk86v6Mniw0b7or/O6/n9GTBT/WxyvT0nH0
5KDljFtp1PFx/ny/HDhDxrdx1HH05OGx1aay1zlj6MlDXJMH3XjjGHry4N23
y8vs3Sh6ClCkmA7VYaPoKUDOhEvoc4NR9BQh+IoweEQwgp4ihEwIaKYBI+gp
gq7Cc9tVuiPoKYGbhzl/8NEwekoQN1Jf7XBkGD1lKLRdT9VcNoyeMlxmjW02
Ew6hpwxbVv9mHp06hN4C2LOHt310xxB6C4BX7vMpiDqEngrI7Q47965aip4K
GJtF8/QTpeipAO23beuMtknRU4UfP9y2e0WXoqcKGyo/HOI0DKKnBq4zJ87L
ZA2ipwY/uFF99/w0iJ4alBwikk1XD6KnDv7+9le+mxpATx1KfDe9fvJsAD0N
OFtYuzAmZQA9DegpGt4c7jeAngZwik7w0i0H0KNCsNanqo9KpEcFw/SdZyzf
S9DThEy7NffT8yW4fvZ68myd3EkJ+ppQG55d4btLgvs14Ub+s8Y7ZhI8TxMe
5Ay0DsmTnha4f575zC3tR08LDo96OWoF9qOnBVbBlz1zTPrR0wLJ34W8qto+
9LSgv5F/8/iZPvRoYLqiwLbItg89GjQuY+zYMdWLHg0q+vp3u9/pRY8Gv74+
trcstBc9Guyd6X0btLoXPTrcPrw0J2CgBz06ZFQs08y+1YPPKx2W22W8VDnU
gx4dqg7XSy6v7UGPDkJ7o49u493oaYOl1MJ1YXk3etoQsXfNfoVT3ehpQ7hV
SoDEqRs9bYhMOaX5idaNnjYoLNlp8+RDF3o6IL/dYeW1a13o6UDQg/1OwUFd
6M3eD0n8ZtHGLvR0wMr0gaRUuQs9HaitCDy5vL4TPV3omZm2D73aiZ4uHF0W
/yDhUCd6uuD3JuFmkG0nerqQFfy2w0C7Ez1dkJokxse2daCnB88FdlUF/3Sg
pwdrJRa0c/Ed6OnBlS0x7RzPDvT0ICL19qTv6g709ECRr2rqpkR6+pA0yXHv
bGxHTx/eXOQVsYvb0dOHwUc+3uNx7ejpw74OG37g3nb09KFtcR1x9Ot29Big
lVQXpE8jPQa8GuybcOwWo8cAhaLiqwsqxegxoL0uy8EtU4weA05VLW8wDRej
ZwCJsiKfYzvF6BnA4plItR9WkZ4B+LssVbqlTnoG0Fl2NSu2qw09A9hxMnF9
/ZM29AzBvSDPOuNaG3qGEF60wrohug09Q5C6c2t4+9rQM4Q6w9Jfr1uTniGw
le9YW7BJzwiS9ovyvpIhPSPY5RqYfVbUip4R3DrwC3VXRSt6RpDVmtQZk9OK
nhG0Diyz0I9pRc8YfP1WTKn6t6JnDGGTPF8vR9IzBqnDPxc1l5OeMXAV/Z4Y
U0nPGI5ckt0QM9iCHhPyYj032te3oMeEysJtiz1KW9BjQqbtbs+nl1vQY8KI
9s6tp6Nb0GOC12bdkEs/kZ4JmDOXbJlyIT0TuNcU5lFoQXomUMpTsy1kkJ4J
JH3LT52YaUbPBFruj8heEDejxwKjUB/z0Orm+fUMFniYVr7JKGnG9zUL7NRy
8jV+x/3OLMiKMjhZGd2M57FAiZ9l/ODnZv7c90EUCwQ3q1wpbuilsWDpOfbM
iY3oFbNgYdEHiv0isocFdXfLYYsGemIW9Da0/Rk/Kpr3KGwojUn+WlUkwj42
9NZqiJ4+F2EfG2r2+uRUlIiwjw0HM7fFjl4WYR8b5FPUk/3i0Itig/O0mVAj
FL00NkSkhUX2e6JXzIaGD+U8JSf0qtiQW/qQ+f1a9MRsKLpO9X/PIvs4oJpd
G3dBjezjwDHv6pKoMSH2ccAwkmmQ3SrEPg7Ypa6XSF8JsY8DmWH3go+WCbFv
1lNx/2h2Q4h9HHjjwj9MT0GvmANd1NATS06hV8UB24hKp8Bg9MQcsLG4qvfJ
Ez0KFy4p+zlGOqPH4EJJ1HYzxw1kHxdOm9UbWi8R8ue+d5258DutJMhHl+zj
wttYcfxf8mQfF4qCTNJ2ipuwjws/pj1bm/awCfu48M587f0V2U3zXhUX1F9c
k9U53oR9XAhK125z2tOEfQshbZG6/UurJv6/EFHIUA==
      "]], {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0038500000000000006`], AbsoluteThickness[1.6], {}, 
     GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0.368417, 0.506779, 0.709798],
        FrontFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        BackFaceColor->RGBColor[0.368417, 0.506779, 0.709798],
        GraphicsColor->RGBColor[0.368417, 0.506779, 0.709798],
        PointSize->0.0038500000000000006`,
        Thickness->Absolute[1.6],
        FontSize->10,
        FontColor->RGBColor[
         0.368417, 0.506779, 0.709798]], {0, 0}], CompressedData["
1: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
      "]], {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.05, 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"delay \[Tau] [s]\"", TraditionalForm], 
    FormBox["\"Re[\[Lambda]] [1/s]\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->Directive[12, FontFamily -> "Arial"],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0.05, 10.000000000000002`}, {-2.3162387319762003`, 
   0.06817902196685909}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6937175549158363`*^9, 3.693717950938946*^9, 3.693718170226967*^9, 
   3.6937192784873095`*^9, 3.6937196822433376`*^9, {3.6937197377497635`*^9, 
   3.6937197624598885`*^9}, 3.693719821708917*^9, 3.6937199603518524`*^9, 
   3.6937203810277977`*^9, 3.6937225799596086`*^9, 3.693722798291275*^9, {
   3.6937234468970594`*^9, 3.693723495648944*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 14368, 249, 152, "Input"],
Cell[CellGroupData[{
Cell[14951, 273, 10404, 287, 569, "Input"],
Cell[25358, 562, 1157, 30, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26552, 597, 243, 3, 64, "Chapter"],
Cell[26798, 602, 278, 5, 30, "Text"],
Cell[27079, 609, 15843, 386, 780, "Input"],
Cell[42925, 997, 629, 17, 75, "Input"],
Cell[43557, 1016, 631, 18, 75, "Input"],
Cell[CellGroupData[{
Cell[44213, 1038, 5485, 129, 469, "Input"],
Cell[49701, 1169, 21054, 396, 380, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

